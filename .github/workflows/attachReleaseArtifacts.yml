name: "Attach Release Artifacts"

# Controls when the action will run. 
on:
  release:
    types: [published]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  attach-release-artifacts:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
        
      - name: Download required assemblies
        id: download-assemblies
        shell: bash
        env: 
          KSP_ZIP_PASSWORD: ${{ secrets.KSP_ZIP_PASSWORD }}
        run: |
          curl https://ksp-ro.s3-us-west-2.amazonaws.com/KSPAssemblies-1.10.zip --output /tmp/bins.zip
          KSP_DLL_PATH="/opt/ksp/assembly"
          echo "::set-output name=ksp-dll-path::${KSP_DLL_PATH}"
          mkdir -p "${KSP_DLL_PATH}"
          unzip -P "${KSP_ZIP_PASSWORD}" '/tmp/bins.zip' -d "${KSP_DLL_PATH}"
          rm '/tmp/bins.zip'          
                    
      - name: Build mod solution
        run: |
          rm -f ${GITHUB_WORKSPACE}/GameData/RealismOverhaul/Plugins/*.dll
          rm -f ${GITHUB_WORKSPACE}/GameData/EngineGroupController/Plugins/*.dll
          msbuild /p:Configuration=Release /p:ReferencePath="${{ steps.download-assemblies.outputs.ksp-dll-path }}" ${GITHUB_WORKSPACE}/Source/RealismOverhaul.sln
          msbuild /p:Configuration=Release /p:ReferencePath="${{ steps.download-assemblies.outputs.ksp-dll-path }}" ${GITHUB_WORKSPACE}/Source/KerbalPlugins.EngineGroupController.sln
          cp -v ${GITHUB_WORKSPACE}/Source/obj/Release/RealismOverhaul.dll ${GITHUB_WORKSPACE}/GameData/RealismOverhaul/Plugins/RealismOverhaul.dll
          cp -v ${GITHUB_WORKSPACE}/Source/EngineGroupController/obj/Release/EngineGroupController.dll ${GITHUB_WORKSPACE}/GameData/EngineGroupController/Plugins/EngineGroupController.dll
          cp -v ${GITHUB_WORKSPACE}/Source/UnityGUIFramework/obj/Release/UnityGUIFramework.dll ${GITHUB_WORKSPACE}/GameData/EngineGroupController/Plugins/UnityGUIFramework.dll
        
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.0
          
      - name: Make metadata
        run: |
          python ${GITHUB_WORKSPACE}/makeMeta.py ${{ github.event.release.tag_name }}
          
      - name: Assemble release
        id: assemble-release
        run: |
          RELEASE_DIR="${RUNNER_TEMP}/release"
          echo "Release dir: ${RELEASE_DIR}"
          echo "Release zip: ${RELEASE_DIR}/RealismOverhaul-${{ github.event.release.tag_name }}.zip"
          mkdir -v "${RELEASE_DIR}"
          echo "::set-output name=release-dir::${RELEASE_DIR}"
          cp -v -R "${GITHUB_WORKSPACE}/Ships" "${RELEASE_DIR}"
          cp -v -R "${GITHUB_WORKSPACE}/GameData" "${RELEASE_DIR}"
          cp -v "${GITHUB_WORKSPACE}/RO.version" "${RELEASE_DIR}/GameData/RealismOverhaul/RO.version"
          cp -v "${GITHUB_WORKSPACE}/README.md" "${RELEASE_DIR}/README.md"
          cd ${RELEASE_DIR}
          zip -r RealismOverhaul-${{ github.event.release.tag_name }}.zip GameData Ships README.md
        
      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.assemble-release.outputs.release-dir }}/RealismOverhaul-${{ github.event.release.tag_name }}.zip
          asset_name: RealismOverhaul-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
