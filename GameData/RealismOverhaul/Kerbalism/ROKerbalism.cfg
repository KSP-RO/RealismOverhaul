// =================================================================================
// This is the official profile of the Realism Overhaul Mod
// =================================================================================

// TO-DO's
//
// * Determine proper amount of EC on_eva
// * Degeneration on all Rules - should be done
// * How much radiation is fatal?? Where are the values stored for how much a crew is exposed to? -should be done, needs checking and tweaking
// * Non-regenerative scrubber for EVA? - done
// * Pap: I think we should remove the Humidity System. It is important in RL, but hard to have abstract for our purposes causing issues for the Crew instead of systems
// 
// * The RSS radiation profile needs to be completely remade
// * Work on having Humidity affect crew stress, otherwise remove it
// * Upgrades for EVA suits? Apollo doubled EVA duration from Apollo 14 and Shuttle/ISS suits improved duration again;
// * Modern suits would have Orion-like vacuum scrubbers and again, improved duration

// SOURCES
//
// NTRS - Fuel Cells for Space Science Applications (2003): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20040010319.pdf
// NTRS - The Fuel Cell in Space (1989): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19900002488.pdf
// NTRS - Apollo portable life support system performance report (1972): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19720019460.pdf
// NTRS - Radiation Protection for Lunar Mission Scenarios (2005): https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20050215115.pdf
// NHRP - Risk of Radiation Carcinogenesis(2009) : https://humanresearchroadmap.nasa.gov/evidence/reports/Carcinogenesis.pdf

Profile
{
	name = RealismOverhaul
	
	// SUPPLIES
	Supply
	{
		resource = ElectricCharge
		on_eva = 1260.0 //temporary 350Wh based on the 279/390Wh batteries in the apollo PLSS
		low_message = $VESSEL batteries are getting low@<i>We must shut down non-essential systems</i>
		empty_message = $VESSEL has run out of ElectricCharge@<i>Life support systems are off</i>|$VESSEL is out of ElectricCharge@<i>We no longer have control</i>
		refill_message = $VESSEL batteries have been recharged@<i>All systems are back online</i>
	}
	Supply
	{
		resource = Food
		on_pod = 29.25 // 5 days
		low_message = Food reserves are getting low on $VESSEL@<i>All edible items are being rationed</i>
		empty_message = There is no more food on $VESSEL@<i>The crew prepares for the worst</i>
		refill_message = $VESSEL food reserves restored@<i>Rations have returned to normal amounts</i>
	}
	Supply
	{
		resource = Water
		on_pod = 19.36 // 5 Days
		on_eva = 7 // more than enough for an 8h EVA
		low_message = Water reserves are getting low on $VESSEL@<i>Bathing has been suspended</i>
		empty_message = $VESSEL is completely out of water@<i>We are in a state of emergency</i>
		refill_message = $VESSEL has restocked water reserves@<i>Regular bathing schedules can resume</i>
	}
	Supply
	{
		resource = Oxygen
		on_pod = 2960 // 5 Days
		on_eva = 195 // 8 hours
		low_message = Oxygen reserves are dangerously low on $VESSEL@<i>Something must be done immediately</i>
		empty_message = $VESSEL has run out of Oxygen@<i>It is only a matter of time for the crew</i>
		refill_message = $VESSEL Oxygen reserves refilled@<i>Everyone is breathing easier</i>
	}
	Supply
	{
		resource = Nitrogen
		low_message = Nitrogen reserves are low on $VESSEL@<i>Please send a resupply mission</i>
		empty_message = $VESSEL is out of Nitrogen@<i>The crew should consider getting in their suits</i>
		refill_message = $VESSEL Nitrogen reserves refilled@<i>Normal operations can resume</i>
	}
	Supply
	{
		resource = LithiumHydroxide
		low_message = Lithium Hydroxide reserves are low on $VESSEL@<i>Please send a resupply mission</i>
		empty_message = $VESSEL is out of Lithium Hydroxide@<i>We can no longer scrub CO2</i>
		refill_message = $VESSEL Lithium Hydroxide reserves refilled@<i>Normal operations can resume</i>
	}
	Supply
	{
		resource = CarbonDioxide
		low_message = $VESSEL CO2 reserves are low
		empty_message = $VESSEL CO2 tanks are empty
		refill_message = $VESSEL has refilled the CO2 tanks
	}
	Supply
	{
		resource = Ammonia
		low_message = $VESSEL Ammonia reserves are low
		empty_message = $VESSEL Ammonia tanks are empty
		refill_message = $VESSEL has refilled the Ammonia tanks
	}
	Supply
	{
		resource = LqdHydrogen
		low_message = $VESSEL Liquid Hydrogen reserves are low
		empty_message = $VESSEL Liquid Hydrogen tanks are empty
		refill_message = $VESSEL has refilled the Liquid Hydrogen tanks
	}
	Supply
	{
		resource = LqdOxygen
		low_message = $VESSEL Liquid Oxygen reserves are low
		empty_message = $VESSEL Liquid Oxygen tanks are empty
		refill_message = $VESSEL has refilled the Liquid Oxygen tanks
	}

// ==============================================================================
// RULES
// ==============================================================================
    
	Rule
	{
		name = climatization
		input = ElectricCharge
		rate = 0.0001 // per-kelvin (temp diff), per m^3 (living space), per-second
		degeneration = 0.00000007 // about 2h at 100k temp diff in 20m^3
		modifier = temperature,volume,per_capita
		warning_message = $ON_VESSEL$KERBAL feels cold|$ON_VESSEL$KERBAL is sweating
		danger_message = $ON_VESSEL$KERBAL is freezing|$ON_VESSEL$KERBAL is burning alive
		fatal_message = $ON_VESSEL$KERBAL froze to death|$ON_VESSEL$KERBAL was burned alive
		relax_message = $ON_VESSEL$KERBAL hypothermia is under control|$ON_VESSEL$KERBAL is cooling down
	}
	Rule
	{
		name = eating
		input = Food
		output = Waste
		rate = 1.94976 // Based on RO-TACLS Profile (5.84928 per day)
		interval = 28800.0 // 3 Meals per day
		individuality = 0.00 // Everyone eats the same amount
		degeneration = 0.0222222 // 45 meals, 15 days
		warning_message = $ON_VESSEL$KERBAL is hungry
		danger_message = $ON_VESSEL$KERBAL is starving
		fatal_message = $ON_VESSEL$KERBAL starved to death
		relax_message = $ON_VESSEL$KERBAL is enjoying a meal
	}
	Rule
	{
		name = drinking
		input = Water
		output = WasteWater
		rate = 0.774144 // Based on RO-TACLS Profile (3.87072 per day)
		interval = 17280.0 // 5 drinks per-day 
		degeneration = 0.08333 // 2.4 days
		individuality = 0.00 // Everyone uses the same amount
		warning_message = $ON_VESSEL$KERBAL is thirsty
		danger_message = $ON_VESSEL$KERBAL is dehydrated
		fatal_message = $ON_VESSEL$KERBAL died from dehydration
		relax_message = $ON_VESSEL$KERBAL is enjoying a drink
	}
	Rule
	{
		name = breathing
		input = Oxygen
		output = WasteAtmosphere
		rate = 0.00685 // Based on RO-TACLS Profile (591.84 per day)
		degeneration = 0.0055555 // 3 minutes
		modifier = non_breathable
		individuality = 0.00 // Everyone uses the same amount
		warning_message = $ON_VESSEL$KERBAL can't breathe
		danger_message = $ON_VESSEL$KERBAL is suffocating
		fatal_message = $ON_VESSEL$KERBAL suffocated to death
		relax_message = $ON_VESSEL$KERBAL is breathing again
	}
  Rule
  {
    name = humidity
    input = MoistAtmosphere
    output = MoistAtmosphere
    monitor = true
    monitor_offset = 0.6 // Base humidity of 60% - ***DO NOT CHANGE*** Bad things will happen as base humidity is Hard-Coded in Habitation.
    rate = 0.002879123 // Based on a humans output of humidity from breathing, a humans breath is at 100% humidity and at 50Ltr/day MoistAtmosphere, contains 850 mL of Water/day.
    input_threshold = 0.95
    degeneration = 0.000003858 // 3 days
    variance = 0.0 // No Variance
    modifier = humidity,non_breathable // if we are on a planet with breathable atmosphere vent moisture outside.
    warning_message = $ON_VESSEL$KERBAL notes condensation is forming
    danger_message = $ON_VESSEL$KERBAL is seeing an alarming amount of condensation
    fatal_message = $ON_VESSEL$KERBAL died from electrocution touching moisture soaked equipment
    relax_message = $ON_VESSEL$KERBAL is dry again
  }
    
  // Carbon Dioxide Toxicity
  // 1% in air = Drowsiness
  // 3% in air = Mild narcosis, Reduced Hearing, Increased Heart Rate and Blood Pressure
  // 5% in air = Dizziness, Confusion, Headache, Shortness of Breath
  // 7-10% in air = Unconsciousness, Muscle Tremors, Suffocation and Death
  Rule
  {
    name = co2 poisoning
    degeneration = 0.000555556 // 30 minutes
    modifier = poisoning
	warning_threshold = 0.23
    warning_message = $ON_VESSEL$KERBAL's is beginning to feel drowsy
    danger_message = $ON_VESSEL$KERBAL is having trouble breathing
    fatal_message = $ON_VESSEL$KERBAL has died of CO2 poisoning
    relax_message = $ON_VESSEL$KERBAL is breathing normally again
  }
  Rule
  {
    name = stress
    degeneration = 0.000000032 // 365 days FIXME: Is this too short?
    variance = 0.0 // No Variance
    individuality = 0.0 // No Variance
    modifier = living_space,comfort,pressure, humidity
    breakdown = true // trigger breakdown event instead of death
    warning_message = $ON_VESSEL$KERBAL is losing their mind@<i>Concentration is becoming a problem</i>
    danger_message = $ON_VESSEL$KERBAL is about to breakdown@<i>The stress is too much</i>
    relax_message = $ON_VESSEL$KERBAL is thinking straight now@<i>The stress level has reduced</i>
  }
  Rule
  {
    name = radiation
    degeneration = 1.0 // just use the modifier??
    variance = 0.1 // IRL variations are huge, may want to keep them low or remove them for balance though
    individuality = 0.0 // No Variance
    lifetime = true // Persists as a life time value
    modifier = radiation,shielding
    warning_threshold = 100.0 // FIXME - probably useless
    danger_threshold = 200.0 // FIXME - probably useless
    fatal_threshold = 300.0 // FIXME - based on the career limit for a 55y old male astronaut of 3 Sv
    warning_message = $ON_VESSEL$KERBAL has been exposed to intense radiation
    danger_message = $ON_VESSEL$KERBAL is reporting symptoms of radiation poisoning
    fatal_message = $ON_VESSEL$KERBAL died after being exposed to extreme radiation
    relax_message = $ON_VESSEL$KERBAL no longer exposed to high levels of radiation
  }

// ==============================================================================
// PROCESSES
// ==============================================================================


  // FIXME - Is this needed? Numbers are not calibrated
  // convention: 1 capacity = enough to scrub output of 1 crew member for 1 day
  Process
  {
    name = non-regenerative scrubber
    modifier = _NonRegenScrubber
	input = ElectricCharge@0.023    // 43 watts deducted from the Apollo PLSS battery load
    input = WasteAtmosphere@0.012432    // efficiency starts at 2 (2 x a pods scrubber), reaches 1 in 6h, then drops below
    input = _NonRegenScrubber@0.000023148   // consume 0.5 capacity in 6h, simulates the scrubber wearing out over time.
  }
  
  // Water sublimator for heat removal, currently useless since kerbals won't die when it runs out
  // Used to add EC consumption and water tanks to EVA-based on the Apollo PLSS
 Process
  {
    name = water sublimator
    modifier = _WaterSublimator
	input = ElectricCharge@0.020
    input = Water@0.0000001554    //consumes around 0.56kg of water in 1h
  }

  // Based on the Lithium Hydroxide Apollo Scrubber
  // convention: 1 capacity = enough to scrub output of 1 crew member
  Process
  {
    name = scrubber
    modifier = _Scrubber
    input = ElectricCharge@0.1
    input = WasteAtmosphere@0.006216
    input = LithiumHydroxide@0.00001189
    output = CarbonDioxide@0.00003932
    dump = true
  }

  // Based on the Lithium Hydroxide Orion Scrubber
  // convention: 1 capacity = enough to scrub output of 1 crew member
  Process
  {
    name = advanced scrubber
    modifier = _AdvScrubber
    input = ElectricCharge@0.01
    input = WasteAtmosphere@0.006216
    input = LithiumHydroxide@0.00001189
    output = CarbonDioxide@0.00003932
    dump = true
  }

  // ISS has normal air pressure at 101.3kPa (14.7 psi)
  // convention: 1 capacity = enough to compensate for leaks in 70 m^2 surface (a cube of 40 m^3 volume)
  Process
  {
    name = pressure control
    modifier = _PressureControl,non_breathable
    input = ElectricCharge@0.00858
    input = Nitrogen@0.35
    output = Atmosphere@0.35
  }

  // FIXME: What is this??
  // convention: when pressure control is disable in breathabe atmosphere, air pump will consume only EC and pumping air into the vessel
  Process
  {
    name = air pump
    modifier = _AirPump,breathable
    input = ElectricCharge@0.00258
    output = Atmosphere@7.35
  }
  
  // FIXME: Remove?
  
  // ISS THC keeps the ISS around 60% humidity
  // Once at 70% there are issues with microorganism growth

  // convention: 1 capacity = enough to reclaim moisture output of 1 crew member
  // 50Ltr per-day @100% humidity. Contains 850mL of Water per-day per Crew.
  Process
  {
    name = humidity controller
    modifier = _HumidityController
    input = ElectricCharge@0.0935
    input = MoistAtmosphere@0.00181978 
      // Calculated with the amount of water in a Liter of air @ 0.017mL/L (in real world this is approx. 100% saturation)
      // 850mL of Water divided by 0.017mL = 50L of MoistAtmosphere.
      // 50L divided by MoistAtmosphere density of 804mL/L = 62.18905473L
      // 62.18905473L / 86400 seconds (one day) = 0.00071978/s
    output = Water@0.00002487 // 53.125mL divided by density of Water = 0.053125L, divided by 21600 seconds (a Kerbal day of 6hrs) = 0.000009837975/s
    dump = true
  }
  
  // Based on ISS Urine Reclamation
  // convention: 1 capacity = enough to recycle output of 1 crew member
  Process
  {
    name = water recycler
    modifier = _WaterRecycler
    input = ElectricCharge@0.1
    input = WasteWater@0.00000619
    output = Water@0.0000336 // ISS currently achieves 75% Water recovery
    output = Ammonia@0.00000104 // Based on Wikipedia, we assume 4.21% of WasteWater is solids and 55% of solids are Urea    
    dump_valve = Water,Ammonia,Water&Ammonia
  }
  
  // FIXME: These don't exist yet, but most likely unnecessary in orbit as it is dumped from the craft. What to do on land bases? Add this for Moon Bases / Mars Bases?
  // convention: 1 capacity = enough to process output of 1 crew member
  Process
  {
    name = waste processor
    modifier = _WasteProcessor
    input = ElectricCharge@0.065556
    input = Waste@0.0000045525
    // According to https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4500995/ feces contains approximately 0.7% nitrogen.
    // Feces is considered to the dominant source of Waste
    // Waste is 975.3 times more dense than Ammonia
    output = Ammonia@0.000031083125
  }
  Process
  {
    name = waste incinerator
    modifier = _WasteIncinerator
    input = Waste@0.0001082667 // H18C82
    input = Oxygen@0.1589194249
    output = CarbonDioxide@0.1497439605
    output = Water@0.0000131259
    output = ElectricCharge@0.005
    dump_valve = Water,ElectricCharge,Water&ElectricCharge
  }
  
  Process
  {
    name = atmo leaks
    modifier = surface,non_breathable
    input = Atmosphere@0.000001899785682  // leakage of Atmosphere (N2) per second for a surface area of 1 m²
    // From ISS: see https://www.nasa.gov/pdf/179225main_ISS_Poster_Back.pdf and https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20110012997.pdf
    // 935 m³ volume, ~1105 m² surface (estimated), 0.227 Kg/day (structural)
    // Surface estimation: see the "Atmo Leak Estimation" spreadsheet in misc.
    // 1 Kerbin day is 1/4 of a human day so 0.227/4 = 0.05675 Kg/day
    // 0.05675 Kg/day over 1105 m² = 0.0513352488 (g/m²)/day.
    // Using the density of N2 from CRP we get 1.251 g/KSPunit = 0.0410353707 (unit/m²)/day
    // That divided over 21600 secs = 0.000001899785682 (unit/m²)/sec
  }
 
  // FIXME: Determine proper Half-life for what we want
  Process
  {
    name = radioisotope generator
    modifier = _SNAP3RTG
    input = _SNAP3RTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@1.64e-10
    output = ElectricCharge@0.0025
    output = DepletedFuel@1.64e-10
  }
  Process
  {
    name = radioisotope generator
    modifier = _SNAP9RTG
    input = _SNAP9RTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@1.64e-10
    output = ElectricCharge@0.025
    output = DepletedFuel@1.64e-10
  }
  Process
  {
    name = radioisotope generator
    modifier = _SNAP19RTG
    input = _SNAP19RTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@6.34e-11
    output = ElectricCharge@0.08
    output = DepletedFuel@6.34e-11
  }
  Process
  {
    name = radioisotope generator
    modifier = _MHWRTG
    input = _MHWRTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@4.32e-10
    output = ElectricCharge@0.475
    output = DepletedFuel@4.32e-10
  }
  Process
  {
    name = radioisotope generator
    modifier = _GPHSRTG
    input = _GPHSRTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@2.59e-10
    output = ElectricCharge@0.3
    output = DepletedFuel@2.59e-10
  }
  Process
  {
    name = radioisotope generator
    modifier = _MMRTG
    input = _MMRTG@0.000000001888 // 28.8 kerbin-year half-life
    input = Plutonium-238@1.64e-10
    output = ElectricCharge@0.11
    output = DepletedFuel@1.64e-10
  }
  
  // Fuel Cells are based off of 1.0kW produced. For the process controller, we
  // should be multiplying the capacity * the amount we want produced
  // Eg. Apollo Fuel Cells were 1.42kW so the capacity = 1.42
  Process
  {
    name = fuel cell
    modifier = _FuelCell
    input = LqdHydrogen@0.000134718
    input = LqdOxygen@0.000269436
    output = Water@0.0001186
    output = ElectricCharge@1.0
    dump_valve = Water
  }
  
  // Based on current electrolysis rates where it takes 12.749kWh to make 1L of H
  // Convention: 1 "unit" creates just a little more O2 per second than is needed for 1 crew
  Process
  {
    name = water electrolysis
    modifier = _WaterElectrolysis
    input = ElectricCharge@0.178486
    input = Water@0.000011248
    output = Hydrogen@0.014
    output = Oxygen@0.007
    dump_valve = Hydrogen,Oxygen
  }
  
  Process
  {
    name = sabatier process
    modifier = _Sabatier
    input = ElectricCharge@0.8
    input = WasteAtmosphere@0.0172683775
    input = Hydrogen@0.064721246
    output = Water@0.0000259988
    output = LqdMethane@0.0000271941
    dump_valve = Water,LqdMethane
  }
  
  Process
  {
    name = brayton generator
    modifier = _BraytonGenerator
    input = EnrichedUranium@1.0813e-15
    output = ElectricCharge@25
    output = DepletedUranium@1.0813e-15
  }
  
  Process
  {
    name = turbine generator
    modifier = _TurbineGenerator
    input = EnrichedUranium@6.66667E-14
    output = ElectricCharge@1
    output = DepletedUranium@6.66667E-14
  }    
    
}

// ============================================================================
// Add scrubber and sublimator processes to EVA kerbals
// ============================================================================

@PART[kerbalEVA|kerbalEVAfemale]:NEEDS[ProfileRealismOverhaul]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _NonRegenScrubber
    title = Non-Regen Scrubber
    capacity = 1.0
    toggle = true
    running = true
  }
  
  MODULE
  {
    name = ProcessController
    resource = _WaterSublimator
    title = Water Sublimator
    capacity = 1.0
    toggle = true
    running = true
  }
}

// ==============================================================================
// Add configurable Life Support to Mk.1 Command Pod for Testing
// ==============================================================================
@PART[mk1pod_v2]:NEEDS[ProfileRealismOverhaul]:FOR[Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _Scrubber
    title = Scrubber
    capacity = #$/CrewCapacity$
    running = true
  }
  
   MODULE
  {
    name = ProcessController
    resource = _AdvScrubber
    title = Advanced Scrubber
    capacity = #$/CrewCapacity$
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _PressureControl
    title = Pressure control
    capacity = #$/CrewCapacity$
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _AirPump
    title = Air Pump
    capacity = #$/CrewCapacity$
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _WaterRecycler
    title = Water recycler
    capacity = #$/CrewCapacity$
    running = true
  }
  
 MODULE
  {
    name = ProcessController
    resource = _HumidityController
    title = Humidity Controller
    capacity = #$/CrewCapacity$
    running = true
  }
  
  MODULE
  {
    name = ProcessController
    resource = _FuelCell
    title = Fuel Cell
    capacity = #$/CrewCapacity$
    running = false
  }
  
  @MODULE[ProcessController],*
  {
    @capacity *= 1.67
  }
  
  MODULE
  {
    name = Configure
    title = Pod
    slots = 4
    
    SETUP
    {
      name = Scrubber
      desc = A Lithium Hydroxide scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere. Apollo level.
      mass = 0.01
      cost = 250

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Scrubber
      }
    }
	
	SETUP
    {
      name = Advanced Scrubber
      desc = A Lithium Hydroxide scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere. Orion Level.
      mass = 0.01
      cost = 250

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _AdvScrubber
      }
    }

    SETUP
    {
      name = Pressure Control
      desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
      tech = start
      mass = 0.01
      cost = 250

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _PressureControl
      }

      // Air pump always is add with pressureControl
      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _AirPump
      }

      RESOURCE
      {
        // approx 5 days of leaks and volume of a crew member
        // crew going eva will need the volume their bodies displaced within the vessel replaced with N2 to correct pressure drop,
        // vise versa when entering from eva the pressure will increase due to the volume of the Kerbal displacing
        // the internal vessel atmosphere, excess is vented overboard.
	    // The pressure controller can be disabled to save N2 that will be used replacing the Kerbals volume,
        name = Nitrogen
        amount = #$/CrewCapacity$
        maxAmount = #$/CrewCapacity$
        @amount *= 331.3  // 1.3 for leaks, 330 Kerbal volume
        @maxAmount *= 331.3
      }
    }

    SETUP
    {
      name = Water Recycler
      desc = Filter impurities out of <b>WasteWater</b>.
      tech = start
      mass = 0.05
      cost = 500


      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WaterRecycler
      }

      RESOURCE
      {
        name = WasteWater
        amount = 0
        maxAmount = #$/CrewCapacity$
        @maxAmount *= 5
      }
    }
	
	SETUP
    {
      name = Humidity Controller
      desc = Removes water from the internal atmosphere.
      tech = start
      mass = 0.1
      cost = 1000

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _HumidityController
      }
    }

    SETUP
    {
      name = Fuel Cell
      desc = A fuel cell that burns <b>Liquid Hydrogen</b> and <b>Liquid Oxygen</b>, producing <b>Water</b> as a by-product.
      tech = start
      mass = 0.1
      cost = 1000

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _FuelCell
      }
    }
  }
}

// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _NonRegenScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterSublimator
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Scrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AdvScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AirPump
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HumidityController
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteProcessor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteIncinerator
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SNAP3RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SNAP9RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SNAP19RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MHWRTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _GPHSRTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MMRTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _BraytonGenerator
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _TurbineGenerator
  density = 0.0
  isVisible = false
}

@RESOURCE_DEFINITION[Nitrogen]    // Remove Nitrogen from fuel flow priorities (Don't know what RoverDude was thinking??)
{
  @flowMode = ALL_VESSEL
}

@Kerbalism:BEFORE[Kerbalism]
{
  @Profile = RealismOverhaul
  @Reliability = false
  @SpaceWeather = false
}
