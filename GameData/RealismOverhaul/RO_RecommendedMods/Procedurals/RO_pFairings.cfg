//  ==================================================
//  Procedural Fairings fairing sides.
//  ==================================================

@PART[KzProcFairingSide1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Ogive [Procedural]
	@manufacturer = Generic
}

@PART[KzProcFairingSide2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Conic [Procedural]
	@manufacturer = Generic
}

@PART[KzProcFairingSide1_TU]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Ogive Recolor [Procedural]
	@manufacturer = Generic
}

@PART[KzProcFairingSide2_TU]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Conic Recolor [Procedural]
	@manufacturer = Generic
}

@PART[KzProcFairingSide1_Logo]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Ogive Logos [Procedural]
	@manufacturer = Generic
}

@PART[KzProcFairingSide2_Logo]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Payload Fairing - Conic Logos [Procedural]
	@manufacturer = Generic
}

//  ==================================================
//  PF generic patcher:

//  * Set the correct part category for both the PF
//    bases/interstages and the PF sides.
//  * Increase the thermal mass of the sides to make
//    them more robust.
//  * Remove any heat shield modules and resources
//    (breaks the mass and cost calculations).
//  * Remove the aero shielding module from the
//    bases/interstages (taken care by FAR).
//  * Disable the auto-strutting of the bases/interstages
//    due to a PF bug.
//  ==================================================

@PART[*]:HAS[@MODULE[ProceduralFairing*]]:AFTER[RealismOverhaul]
{
	@category = Payload

	%thermalMassModifier = 2.0

	!MODULE[ModuleHeatShield],*{}

	!MODULE[ModuleAblator],*{}

	!MODULE[KzFairingBaseShielding],*{}

	@MODULE[ProceduralFairingBase],*
	{
		%autoStrutSides = False
	}

	!RESOURCE,*{}
}

@PART[KzResizableFairingBase]:FOR[RealismOverhaul]
{
	%title = Payload Fairing - Base (Extended) [Procedural]
}

@PART[KzResizableFairingBaseRing]:FOR[RealismOverhaul]
{
	%title = Payload Fairing - Base [Procedural]
}

@PART[KzResizableFairingBase*|RSBRibbedBase|RSBTrussBase|SSTUBase|SSTUHollowRing]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[KzFairingBaseResizer]
	{
		%size = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}

	%MODULE[ModuleDecouple]
	{
		%name = ModuleDecouple
		%ejectionForce = 25
		%ejectionForcePercent = 0
		%explosiveNodeID = top
		%stagingEnabled = True
	}
}

@PART[KzInterstageAdapter2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Interstage - w/ Decoupler [Procedural]
	@manufacturer = Generic

	@MODULE[ProceduralFairingAdapter]
	{
		%baseSize = 3.0
		%topSize = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}
}

+PART[KzInterstageAdapter2]:AFTER[RealismOverhaul]
{
	@name = KzFlatAdapter

	@title = Interstage Fairing Adapter (Flat)
	@manufacturer = Generic

	@node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
	@node_stack_top    = 0.0, 0.05, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_top1   = 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_connect01 = -0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect02 =  0.0, 0.025,  0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect03 =  0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect04 =  0.0, 0.025, -0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect05 = -0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect06 =  0.0, 0.025,  0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect07 =  0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect08 =  0.0, 0.025, -0.5, 0.0, 1.0, 0.0, 0

	@MODEL
	{
		@scale = 1.0, 0.25, 1.0
		!texture = DELETE
	}
}

@PART[RSBRibbedBase_Interstage|SSTUHollowRing_Interstage|SSTUBase_Interstage|RSBTrussBase_Interstage]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[ProceduralFairingAdapter]
	{
		%baseSize = 3.0
		%topSize = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}

	@MODULE[ModuleDecouple]
	{
		%stagingEnabled = True
		%ejectionForce = 25
	}
}

// No-decoupling boattails
+PART[KzInterstageAdapter2]:AFTER[RealismOverhaul]
{
	@name = KzFlatBoattail

	@title = Boattail Adapter (Flat)
	@manufacturer = Generic
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.

	@node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
	@node_stack_top    = 0.0, 0.05, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_top1   = 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_connect01 = -0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect02 =  0.0, 0.025,  0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect03 =  0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect04 =  0.0, 0.025, -0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect05 = -0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect06 =  0.0, 0.025,  0.5, 0.0, 1.0, 0.0, 0
	@node_stack_connect07 =  0.5, 0.025,  0.0, 0.0, 1.0, 0.0, 0
	@node_stack_connect08 =  0.0, 0.025, -0.5, 0.0, 1.0, 0.0, 0

	@MODEL
	{
		@scale = 1.0, 0.25, 1.0
		!texture = DELETE
	}

	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.0002, 0.01, 0.005, 0
	}
	
	!MODULE[ModuleDecouple] {}
	
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

+PART[RSBRibbedBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = RSBRibbedBase_Boattail

	@title = Boattail Adapter (Ribbed)
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.

	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.0002, 0.01, 0.005, 0
	}
	
	!MODULE[ModuleDecouple] {}
	
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

+PART[SSTUHollowRing_Interstage]:AFTER[RealismOverhaul]
{
	@name = SSTUHollowRing_Boattail

	@title = Boattail Adapter (Hollow Ring)
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.

	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.0002, 0.01, 0.005, 0
	}
	
	!MODULE[ModuleDecouple] {}
	
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

+PART[SSTUBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = SSTUBase_Boattail

	@title = Boattail Adapter (Hollow Truss)
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.

	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.0002, 0.01, 0.005, 0
	}
	
	!MODULE[ModuleDecouple] {}
	
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

+PART[RSBTrussBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = RSBTrussBase_Boattail

	@title = Boattail Adapter (Truss)
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.

	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.0002, 0.01, 0.005, 0
	}
	
	!MODULE[ModuleDecouple] {}
	
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

//  ==================================================
//  Procedural Fairings thrust plates.
//  ==================================================

@PART[KzThrustPlate]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Thrust Plate [Procedural]
	@manufacturer = Generic

	@maxTemp = 2073.15

	@MODULE[KzThrustPlateResizer]
	{
		%size = 1.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}

	@MODULE[KzNodeNumberTweaker]
	{
		%radiusStepLarge = 1.0
		%radiusStepSmall = 0.1
	}

	%thermalMassModifier = 2.0

	!MODULE[ModuleHeatShield],*{}

	!MODULE[ModuleAblator],*{}

	!RESOURCE,*{}
}

@PART[KXProcFairing]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}

@PART[ProcPayloadDec]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}

//  ==================================================
//  Enable propellant cross feed for the PF fairings,
//  fuselages and bases/interstages.
//  ==================================================

@PART[*]:HAS[@MODULE[ProceduralFairing*],!MODULE[ModuleToggleCrossfeed]]:AFTER[RealismOverhaul]
{
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = false
	}
}

//  ==================================================
//  CLS-enabled interstage.

//  Use the FL-A5 part from PFFE.
//  ==================================================

@PART[squad_interstage_adapter]:AFTER[zPFFE]
{
	@title = Interstage Adapter (Passable)
	@description = This interstage adapter allows crew transfer. Slightly heavier than equivalent interstage ring.
	
	@MODULE[ProceduralFairingAdapter]
	{
		%specificMass = 0.001, 0.033, 0.022, 0
	}

	MODULE
	{
		name = ModuleConnectedLivingSpace
		passable = true
		impassablenodes = connect01, connect02, connect03, connect04, connect05, connect06, connect07, connect08
	}
	@MODULE[KzFairingBaseResizer]
	{
		@costPerTonne *= 2
	}
}

// As of KSP 1.2, this is used to remove the interstage nodes that appear by default.

@PART[*]:HAS[@MODULE[KzNodeNumberTweaker]]:FOR[RealismOverhaul]
{
	%MODULE[KzNodeNumberTweaker]
	{
		%showInterstageNodes = false
	}
}
