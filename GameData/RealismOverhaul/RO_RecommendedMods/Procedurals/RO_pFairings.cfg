//  ==================================================
//  Procedural Fairings fairing sides.
//  ==================================================

@PART[KzProcFairingSide1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzProcFairingSide2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzProcFairingSide1_TU]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzProcFairingSide2_TU]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzProcFairingSide1_Logo]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzProcFairingSide2_Logo]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

@PART[KzInterstageAdapter2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@manufacturer = Generic
}

+PART[KzInterstageAdapter2]:FOR[RealismOverhaul]
{
	@name = KzFlatAdapter
	@title = Interstage Fairing Adapter (Flat)

	@node_stack_bottom[6] = 2
	@node_stack_top[6] = 2
	@node_stack_top1[6] = 2
	@node_stack_top[1] /= 4
	@node_stack_connect01[1] /= 4
	@node_stack_connect02[1] /= 4
	@node_stack_connect03[1] /= 4
	@node_stack_connect04[1] /= 4
	@node_stack_connect05[1] /= 4
	@node_stack_connect06[1] /= 4
	@node_stack_connect07[1] /= 4
	@node_stack_connect08[1] /= 4

	@MODEL
	{
		@scale = 1.0, 0.25, 1.0
		!texture = DELETE
	}
}

//  ==================================================
//  PF generic patcher:

//  * Set the correct part category for both the PF
//    bases/interstages and the PF sides.
//  * Increase the thermal mass of the sides to make
//    them more robust.
//  * Remove any heat shield modules and resources
//    (breaks the mass and cost calculations).
//  * Remove the aero shielding module from the
//    bases/interstages (taken care by FAR).
//  * Disable the auto-strutting of the bases/interstages
//    due to a PF bug.
//  ==================================================

@PART:HAS[@MODULE[ProceduralFairingSide]]:FOR[RealismOverhaul]
{
	@crashTolerance = 12
	@maxTemp = 1000         // MainSailor: 873.15
	%skinMaxTemp = 2000     // MainSailor: 3273.15
}

@PART:HAS[@MODULE[ProceduralFairing*]]:AFTER[RealismOverhaul]
{
	@category = Payload
	%thermalMassModifier = 2.0

	!MODULE[ModuleHeatShield],*{}
	!MODULE[ModuleAblator],*{}
	!MODULE[KzFairingBaseShielding],* {}
	@MODULE[ProceduralFairingBase],* { %autoStrutSides = False }

	!RESOURCE,*{}
}

// Give the bases a decouple module
@PART[KzResizableFairingBase*|RSBRibbedBase|RSBTrussBase|SSTUBase|SSTUHollowRing]:FOR[RealismOverhaul]
{
	%MODULE[ModuleDecouple]
	{
		%ejectionForce = 25
		%ejectionForcePercent = 0
		%explosiveNodeID = top
		%stagingEnabled = True
	}
}

@PART[KzInterstageAdapter2|KzFlatAdapter|RSBRibbedBase_Interstage|SSTUHollowRing_Interstage|SSTUBase_Interstage|RSBTrussBase_Interstage]:FOR[RealismOverhaul]
{
	%MODULE[ModuleDecouple]
	{
		%ejectionForce = 25
		%ejectionForcePercent = 100
		%explosiveNodeID = top1
		%stagingEnabled = True
	}
}

// Set the bases' size
@PART[KzResizableFairingBase*|RSBRibbedBase|RSBTrussBase|SSTUBase|SSTUHollowRing]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[KzFairingBaseResizer]
	{
		%size = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}
}

@PART[KzInterstageAdapter2|KzFlatAdapter|RSBRibbedBase_Interstage|SSTUHollowRing_Interstage|SSTUBase_Interstage|RSBTrussBase_Interstage]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[ProceduralFairingAdapter]
	{
		%baseSize = 3.0
		%topSize = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}
}

// ProcFairings v6+ eliminated the adapter/resizer modules and integrated size into the fairing base. 
@PART[KzResizableFairingBase*|KzFlatAdapter*|KzInterstageAdapter*|RSBRibbedBase*|RSBTrussBase*|SSTUBase*|SSTUHollowRing*]:HAS[@MODULE[ProceduralFairingBase]:HAS[#mode]]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODULE[ProceduralFairingBase]
	{
		%baseSize = 3.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}
}
@PART[KzResizableFairingBase*|KzFlatAdapter*|KzInterstageAdapter*|RSBRibbedBase*|RSBTrussBase*|SSTUBase*|SSTUHollowRing*]:HAS[@MODULE[ProceduralFairingBase]:HAS[#mode[Adapter]]]:FOR[RealismOverhaul]
{
	@MODULE[ProceduralFairingBase] { %topSize = 3.0 }
}

// No-decoupling boattails
+PART[KzFlatAdapter]:AFTER[RealismOverhaul]
{
	@name = KzFlatBoattail
	@title = Boattail Adapter (Flat)
}

+PART[RSBRibbedBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = RSBRibbedBase_Boattail
	@title = Boattail Adapter (Ribbed)
}

+PART[SSTUHollowRing_Interstage]:AFTER[RealismOverhaul]
{
	@name = SSTUHollowRing_Boattail
	@title = Boattail Adapter (Hollow Ring)
}

+PART[SSTUBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = SSTUBase_Boattail
	@title = Boattail Adapter (Hollow Truss)
}

+PART[RSBTrussBase_Interstage]:AFTER[RealismOverhaul]
{
	@name = RSBTrussBase_Boattail
	@title = Boattail Adapter (Truss)
}

@PART[KzFlatBoattail|RSBRibbedBase_Boattail|SSTUHollowRing_Boattail|SSTUBase_Boattail|RSBTrussBase_Boattail]:AFTER[RealismOverhaul]
{
	@description = Mounting point for boattails for a stage bottom. Note: floating node **does not decouple** and **should not be used**.
	!MODULE[ModuleDecouple] {}
	%MODULE[ModuleToggleCrossfeed]
	{
		%crossfeedStatus = true
		%toggleEditor = true
		%toggleFlight = false
	}
}

//  ==================================================
//  Procedural Fairings thrust plates.
//  ==================================================

@PART[KzThrustPlate]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@title = Thrust Plate [Procedural]
	@manufacturer = Generic

	@maxTemp = 2073.15

	@MODULE[KzThrustPlateResizer]
	{
		%size = 1.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}

	// PF v6 integrated the resizers into the ProceduralFairingBase
	@MODULE[ProceduralFairingBase]
	{
		%baseSize = 1.0
		%diameterStepLarge = 1.0
		%diameterStepSmall = 0.1
	}

	@MODULE[KzNodeNumberTweaker]
	{
		%radiusStepLarge = 1.0
		%radiusStepSmall = 0.1
	}

	%thermalMassModifier = 2.0
	!MODULE[ModuleHeatShield],*{}
	!MODULE[ModuleAblator],*{}
	!RESOURCE,*{}
}

@PART[KXProcFairing]:FOR[RealismOverhaul] { %RSSROConfig = True }
@PART[ProcPayloadDec]:FOR[RealismOverhaul] { %RSSROConfig = True }

//  ==================================================
//  Enable propellant cross feed for the PF fairings,
//  fuselages and bases/interstages.
//  ==================================================

@PART:HAS[@MODULE[ProceduralFairing*],!MODULE[ModuleToggleCrossfeed]]:AFTER[RealismOverhaul]
{
	%MODULE[ModuleToggleCrossfeed]
	{
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = false
	}
}

//  ==================================================
//  CLS-enabled interstage.

//  Use the FL-A5 part from PFFE.
//  ==================================================

@PART[squad_interstage_adapter]:AFTER[zPFFE]
{
	@title = Interstage Adapter (Passable)
	@description = This interstage adapter allows crew transfer. Slightly heavier than equivalent interstage ring.
	
	%MODULE[ModuleConnectedLivingSpace]:NEEDS[ConnectedLivingSpace]
	{
		%passable = true
		%impassablenodes = connect01, connect02, connect03, connect04, connect05, connect06, connect07, connect08
	}
	@MODULE[KzFairingBaseResizer] { @costPerTonne *= 2 }
}

@PART:HAS[@MODULE[KzNodeNumberTweaker]]:FOR[RealismOverhaul]
{
	@MODULE[KzNodeNumberTweaker] { %showInterstageNodes = false }
}
// PF 6.0+ integrated interstage nodes into the FairingBase handling
@PART:HAS[@MODULE[ProceduralFairingBase]]:FOR[RealismOverhaul]
{
	@MODULE[ProceduralFairingBase] { %showInterstageNodes = false }
}
