@PART[RC_cone]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[ProceduralChute]
	{
        	!SIZE,*
        	{
        	}

		SIZE
		{
			size = 1, 1, 1
			sizeID = 1.25m
			caseMass = 0.05
			bottomNode = 0, -0.023045, 0
			bottomNodeSize = 1
			cost = 1
		}
		SIZE
		{
			size = 1.2, 1.2, 1.2
			sizeID = 1.5m
			caseMass = 0.072
			bottomNode = 0, -0.027654, 0
			bottomNodeSize = 1
			cost = 1.2
		}
		SIZE
		{
			size = 1.5, 1.5, 1.5
			sizeID = 1.875m
			caseMass = 0.1125
			bottomNode = 0, -0.0345675, 0
			bottomNodeSize = 2
			cost = 1.5
		}
		SIZE
		{
			size = 1.6, 1.6, 1.6
			sizeID = 2m
			caseMass = 0.128
			bottomNode = 0, -0.036872, 0
			bottomNodeSize = 2
			cost = 1.6
		}
		SIZE
		{
			size = 2, 2, 2
			sizeID = 2.5m
			caseMass = 0.2
			bottomNode = 0, -0.04609, 0
			bottomNodeSize = 2
			cost = 2
		}
		SIZE
		{
			size = 2.4, 2.4, 2.4
			sizeID = 3m
			caseMass = 0.288
			bottomNode = 0, -0.055308, 0
			bottomNodeSize = 3
			cost = 2.4
		}
		SIZE
		{
			size = 2.8, 2.8, 2.8
			sizeID = 3.5m
			caseMass = 0.392
			bottomNode = 0, -0.064526, 0
			bottomNodeSize = 3
			cost = 2.8
		}
		SIZE
		{
			size = 3, 3, 3
			sizeID = 3.75m
			caseMass = 0.45
			bottomNode = 0, -0.069135, 0
			bottomNodeSize = 4
			cost = 3
		}
		SIZE
		{
			size = 3.2, 3.2, 3.2
			sizeID = 4m
			caseMass = 0.512
			bottomNode = 0, -0.073744, 0
			bottomNodeSize = 4
			cost = 3.2
		}
		SIZE
		{
			size = 4, 4, 4
			sizeID = 5m
			caseMass = 0.8
			bottomNode = 0, -0.09218, 0
			bottomNodeSize = 5
			cost = 4
		}
		SIZE
		{
			size = 4.8, 4.8, 4.8
			sizeID = 6m
			caseMass = 1.152
			bottomNode = 0, -0.110616, 0
			bottomNodeSize = 6
			cost = 4.8
		}
		SIZE
		{
			size = 5.6, 5.6, 5.6
			sizeID = 7m
			caseMass = 1.568
			bottomNode = 0, -0.129052, 0
			bottomNodeSize = 7
			cost = 5.6
		}
		SIZE
		{
			size = 6.4, 6.4, 6.4
			sizeID = 8m
			caseMass = 2.048
			bottomNode = 0, -0.147488, 0
			bottomNodeSize = 8
			cost = 6.4
		}
		SIZE
		{
			size = 7.2, 7.2, 7.2
			sizeID = 9m
			caseMass = 2.592
			bottomNode = 0, -0.165924, 0
			bottomNodeSize = 9
			cost = 7.2
		}
		SIZE
		{
			size = 8, 8, 8
			sizeID = 10m
			caseMass = 3.2
			bottomNode = 0, -0.18436, 0
			bottomNodeSize = 10
			cost = 8
		}
        	SIZE
        	{
            		size = 0.24, 0.24, 0.24
			sizeID = 0.3m
			caseMass = 0.00288
			bottomNode = 0, -0.0055308, 0
			bottomNodeSize = 0
			cost = 0.24
        	}
		SIZE
		{
			size = 0.4, 0.4, 0.4
			sizeID = 0.5m
			caseMass = 0.008
			bottomNode = 0, -0.009218, 0
			bottomNodeSize = 0
			cost = 0.4
		}
		SIZE
		{
			size = 0.5, 0.5, 0.5
			sizeID = 0.625m
			caseMass = 0.0125
			bottomNode = 0, -0.0115225, 0
			bottomNodeSize = 1
			cost = 0.5
		}
		SIZE
		{
			size = 0.68, 0.68, 0.68
			sizeID = 0.85m
			caseMass = 0.02312
			bottomNode = 0, -0.0156706, 0
			bottomNodeSize = 1
			cost = 0.68
		}
		SIZE
		{
			size = 0.8, 0.8, 0.8
			sizeID = 1m
			caseMass = 0.032
			bottomNode = 0, -0.018436, 0
			bottomNodeSize = 1
			cost = 0.8
		}
	}
}
@PART[RC_cone_double]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[ProceduralChute]
	{
        	!SIZE,*
        	{
        	}

		SIZE
		{
			size = 1, 1, 1
			sizeID = 1.25m
			caseMass = 0.05
			bottomNode = 0, -0.023045, 0
			bottomNodeSize = 1
			cost = 1
		}
		SIZE
		{
			size = 1.2, 1.2, 1.2
			sizeID = 1.5m
			caseMass = 0.072
			bottomNode = 0, -0.027654, 0
			bottomNodeSize = 1
			cost = 1.2
		}
		SIZE
		{
			size = 1.5, 1.5, 1.5
			sizeID = 1.875m
			caseMass = 0.1125
			bottomNode = 0, -0.0345675, 0
			bottomNodeSize = 2
			cost = 1.5
		}
		SIZE
		{
			size = 1.6, 1.6, 1.6
			sizeID = 2m
			caseMass = 0.128
			bottomNode = 0, -0.036872, 0
			bottomNodeSize = 2
			cost = 1.6
		}
		SIZE
		{
			size = 2, 2, 2
			sizeID = 2.5m
			caseMass = 0.2
			bottomNode = 0, -0.04609, 0
			bottomNodeSize = 2
			cost = 2
		}
		SIZE
		{
			size = 2.4, 2.4, 2.4
			sizeID = 3m
			caseMass = 0.288
			bottomNode = 0, -0.055308, 0
			bottomNodeSize = 3
			cost = 2.4
		}
		SIZE
		{
			size = 2.8, 2.8, 2.8
			sizeID = 3.5m
			caseMass = 0.392
			bottomNode = 0, -0.064526, 0
			bottomNodeSize = 3
			cost = 2.8
		}
		SIZE
		{
			size = 3, 3, 3
			sizeID = 3.75m
			caseMass = 0.45
			bottomNode = 0, -0.069135, 0
			bottomNodeSize = 4
			cost = 3
		}
		SIZE
		{
			size = 3.2, 3.2, 3.2
			sizeID = 4m
			caseMass = 0.512
			bottomNode = 0, -0.073744, 0
			bottomNodeSize = 4
			cost = 3.2
		}
		SIZE
		{
			size = 4, 4, 4
			sizeID = 5m
			caseMass = 0.8
			bottomNode = 0, -0.09218, 0
			bottomNodeSize = 5
			cost = 4
		}
		SIZE
		{
			size = 4.8, 4.8, 4.8
			sizeID = 6m
			caseMass = 1.152
			bottomNode = 0, -0.110616, 0
			bottomNodeSize = 6
			cost = 4.8
		}
		SIZE
		{
			size = 5.6, 5.6, 5.6
			sizeID = 7m
			caseMass = 1.568
			bottomNode = 0, -0.129052, 0
			bottomNodeSize = 7
			cost = 5.6
		}
		SIZE
		{
			size = 6.4, 6.4, 6.4
			sizeID = 8m
			caseMass = 2.048
			bottomNode = 0, -0.147488, 0
			bottomNodeSize = 8
			cost = 6.4
		}
		SIZE
		{
			size = 7.2, 7.2, 7.2
			sizeID = 9m
			caseMass = 2.592
			bottomNode = 0, -0.165924, 0
			bottomNodeSize = 9
			cost = 7.2
		}
		SIZE
		{
			size = 8, 8, 8
			sizeID = 10m
			caseMass = 3.2
			bottomNode = 0, -0.18436, 0
			bottomNodeSize = 10
			cost = 8
		}
		SIZE
        	{
            		size = 0.24, 0.24, 0.24
			sizeID = 0.3m
			caseMass = 0.00288
			bottomNode = 0, -0.0055308, 0
			bottomNodeSize = 0
			cost = 0.24
        	}
		SIZE
		{
			size = 0.4, 0.4, 0.4
			sizeID = 0.5m
			caseMass = 0.008
			bottomNode = 0, -0.009218, 0
			bottomNodeSize = 0
			cost = 0.4
		}
		SIZE
		{
			size = 0.5, 0.5, 0.5
			sizeID = 0.625m
			caseMass = 0.0125
			bottomNode = 0, -0.0115225, 0
			bottomNodeSize = 1
			cost = 0.5
		}
		SIZE
		{
			size = 0.68, 0.68, 0.68
			sizeID = 0.85m
			caseMass = 0.02312
			bottomNode = 0, -0.0156706, 0
			bottomNodeSize = 1
			cost = 0.68
		}
		SIZE
		{
			size = 0.8, 0.8, 0.8
			sizeID = 1m
			caseMass = 0.032
			bottomNode = 0, -0.018436, 0
			bottomNodeSize = 1
			cost = 0.8
		}
	}
}
@PART[RC_radial]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[RC_stack]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	@MODULE[ProceduralChute]
	{
        	!SIZE,*
        	{
        	}

		SIZE
		{
			size = 1, 1, 1
			sizeID = 1.25m
			caseMass = 0.05
			topNode = 0, 0.1544, 0
			topNodeSize = 1
			bottomNode = 0, -0.1304, 0
			bottomNodeSize = 1
			cost = 1
		}
		SIZE
		{
			size = 1.2, 1.2, 1.2
			sizeID = 1.5m
			caseMass = 0.072
			topNode = 0, 0.18528, 0
			topNodeSize = 1
			bottomNode = 0, -0.15648, 0
			bottomNodeSize = 1
			cost = 1.2
		}
		SIZE
		{
			size = 1.5, 1.5, 1.5
			sizeID = 1.875m
			caseMass = 0.1125
			topNode = 0, 0.2316, 0
			topNodeSize = 2
			bottomNode = 0, -0.1956, 0
			bottomNodeSize = 2
			cost = 1.5
		}
		SIZE
		{
			size = 1.6, 1.6, 1.6
			sizeID = 2m
			caseMass = 0.128
			topNode = 0, 0.24704, 0
			topNodeSize = 2
			bottomNode = 0, -0.20864, 0
			bottomNodeSize = 2
			cost = 1.6
		}
		SIZE
		{
			size = 2, 2, 2
			sizeID = 2.5m
			caseMass = 0.2
			topNode = 0, 0.3088, 0
			topNodeSize = 2
			bottomNode = 0, -0.2608, 0
			bottomNodeSize = 2
			cost = 2
		}
		SIZE
		{
			size = 2.4, 2.4, 2.4
			sizeID = 3m
			caseMass = 0.288
			topNode = 0, 0.37056, 0
			topNodeSize = 3
			bottomNode = 0, -0.31296, 0
			bottomNodeSize = 3
			cost = 2.4
		}
		SIZE
		{
			size = 2.8, 2.8, 2.8
			sizeID = 3.5m
			caseMass = 0.392
			topNode = 0, 0.43232, 0
			topNodeSize = 3
			bottomNode = 0, -0.36512, 0
			bottomNodeSize = 3
			cost = 2.8
		}
		SIZE
		{
			size = 3, 3, 3
			sizeID = 3.75m
			caseMass = 0.45
			topNode = 0, 0.4632, 0
			topNodeSize = 4
			bottomNode = 0, -0.3912, 0
			bottomNodeSize = 4
			cost = 3
		}
		SIZE
		{
			size = 3.2, 3.2, 3.2
			sizeID = 4m
			caseMass = 0.512
			topNode = 0, 0.49408, 0
			topNodeSize = 4
			bottomNode = 0, -0.41728, 0
			bottomNodeSize = 4
			cost = 3.2
		}
		SIZE
		{
			size = 4, 4, 4
			sizeID = 5m
			caseMass = 0.8
			topNode = 0, 0.6176, 0
			topNodeSize = 5
			bottomNode = 0, -0.5216, 0
			bottomNodeSize = 5
			cost = 4
		}
		SIZE
		{
			size = 4.8, 4.8, 4.8
			sizeID = 6m
			caseMass = 1.152
			topNode = 0, 0.74112, 0
			topNodeSize = 6
			bottomNode = 0, -0.62592, 0
			bottomNodeSize = 6
			cost = 4.8
		}
		SIZE
		{
			size = 5.6, 5.6, 5.6
			sizeID = 7m
			caseMass = 1.568
			topNode = 0, 0.86464, 0
			topNodeSize = 7
			bottomNode = 0, -0.73024, 0
			bottomNodeSize = 7
			cost = 5.6
		}
		SIZE
		{
			size = 6.4, 6.4, 6.4
			sizeID = 8m
			caseMass = 2.048
			topNode = 0, 0.98816, 0
			topNodeSize = 8
			bottomNode = 0, -0.83456, 0
			bottomNodeSize = 8
			cost = 6.4
		}
		SIZE
		{
			size = 7.2, 7.2, 7.2
			sizeID = 9m
			caseMass = 2.592
			topNode = 0, 1.11168, 0
			topNodeSize = 9
			bottomNode = 0, -0.93888, 0
			bottomNodeSize = 9
			cost = 7.2
		}
		SIZE
		{
			size = 8, 8, 8
			sizeID = 10m
			caseMass = 3.2
			topNode = 0, 1.2352, 0
			topNodeSize = 10
			bottomNode = 0, -1.0432, 0
			bottomNodeSize = 10
			cost = 8
		}
        	SIZE
        	{
            		size = 0.24, 0.24, 0.24
			sizeID = 0.3m
			caseMass = 0.00288
            		topNode = 0, 0.037056, 0
			topNodeSize = 0
			bottomNode = 0, -0.031296, 0
			bottomNodeSize = 0
			cost = 0.24
        	}
		SIZE
		{
			size = 0.4, 0.4, 0.4
			sizeID = 0.5m
			caseMass = 0.008
			topNode = 0, 0.06176, 0
			topNodeSize = 0
			bottomNode = 0, -0.05216, 0
			bottomNodeSize = 0
			cost = 0.4
		}
		SIZE
		{
			size = 0.5, 0.5, 0.5
			sizeID = 0.625m
			caseMass = 0.0125
			topNode = 0, 0.0772, 0
			topNodeSize = 1
			bottomNode = 0, -0.0652, 0
			bottomNodeSize = 1
			cost = 0.5
		}
		SIZE
		{
			size = 0.68, 0.68, 0.68
			sizeID = 0.85m
			caseMass = 0.02312
			topNode = 0, 0.104992, 0
			topNodeSize = 1
			bottomNode = 0, -0.088672, 0
			bottomNodeSize = 1
			cost = 0.68
		}
		SIZE
		{
			size = 0.8, 0.8, 0.8
			sizeID = 1m
			caseMass = 0.032
			topNode = 0, 0.12352, 0
			topNodeSize = 1
			bottomNode = 0, -0.10432, 0
			bottomNodeSize = 1
			cost = 0.8
		}
	}
}
