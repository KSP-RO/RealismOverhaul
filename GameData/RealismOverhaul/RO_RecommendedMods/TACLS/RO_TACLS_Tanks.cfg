@PART[TacLifeSupportMFTContainer]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODULE[ModuleFuelTanks]
	{
		@volume = 265.5
		@type = LifeSupportAll
	}
	@description = Standard size tank that can be resized to fit your needs.
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackHollow
		defaultScale = 1.25
	}
}
@PART[TacLifeSupportMFTContainerLarge]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODULE[ModuleFuelTanks]
	{
		@volume = 2212.5
		@type = LifeSupportAll
	}
	@description = Large size tank that can be resized to fit your needs.
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackHollow
		defaultScale = 2.5
	}
}
@PART[TacLifeSupportMFTContainerSmall]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODULE[ModuleFuelTanks]
	{
		@volume = 29.5
		@type = LifeSupportAll
	}
	@description = Small size tank that can be resized to fit your needs.
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackHollow
		defaultScale = 0.625
	}
}
@PART[HexCanMFTLifeSupportLarge]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@description = Large hex tank that can be resized to fit your needs.
	@MODULE[ModuleFuelTanks]
	{
		@volume = 737.5
		@type = LifeSupportAll
	}
}
@PART[HexCanMFTLifeSupport]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@description = Standard hex tank that can be resized to fit your needs.
	@MODULE[ModuleFuelTanks]
	{
		@volume = 103.25
		@type = LifeSupportAll
	}
}
@PART[HexCanMFTLifeSupportSmall]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@description = Small hex tank that can be resized to fit your needs.
	@MODULE[ModuleFuelTanks]
	{
		@volume = 14.75
		@type = LifeSupportAll
	}
}
@PART[TacAirFilter]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 1.25
	}
	@mass = 0.015
	@description = A life support module that filters Oxygen out of the air. Requires IntakeAir and oxygen atmosphere. Rated for 3 people.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 3.0	// # of people - Figures based on per/person
		//inputResources = IntakeAir, 0.035, ElectricCharge, 0.010
		//outputResources = Oxygen, 0.0073, false
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.010
		}
		INPUT_RESOURCE
		{
			ResourceName = IntakeAir
			Ratio = 0.035
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.0073
			@DumpExcess = false
		}
	}
}
@PART[TacCarbonExtractor]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 1.25
	}
	@mass = 0.025
	@title = TACLS CO2 Scrubber (Lithium Peroxide)
	@description = A simple CO2 scrubber using lithium peroxide. Absorbs CO2, and releases O2 and lithium carbonate (waste). Requires small electric charge to run air pump. Figure 0.5L of LithiumPeroxide/person/day. Rated for 3 people. Resources for 14days.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 3.0	// # of people - Figures based on per/person
		//inputResources = CarbonDioxide, 0.0058912100, ElectricCharge, 0.010, LithiumPeroxide, 0.0000051872
		//outputResources = Oxygen, 0.0029240301, true, Waste, 0.0000257297, true
		@converterName = CO2 Scrubber
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.010
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0058912100
		}
		INPUT_RESOURCE
		{
			ResourceName = LithiumPeroxide
			Ratio = 0.0000051872
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.0029240301
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.0000257297
			DumpExcess = true
		}
	}
	!RESOURCE[CarbonDioxide]
	{
	}
	RESOURCE
	{
		name = LithiumPeroxide
		amount = 21
		maxAmount = 21
	}
}
+PART[TacCarbonExtractor]:FOR[zzzRealismOverhaul]
{
	@name = RO_TACLithiumHydroxide
	@title = TACLS CO2 Scrubber (Lithium Hydroxide)
	@description = A simple CO2 scrubber using lithium hydroxide. Absorbs CO2, and releases water (which needs purification before use) and lithium carbonate (waste). Requires small electric charge to run air pump. Figure 0.75L of LithiumHydroxide/person/day. Rated for 3 people. Resources for 14days.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 3.0	// # of people - Figures based on per/person
		//inputResources = CarbonDioxide, 0.0058912100, ElectricCharge, 0.010, LithiumHydroxide, 0.0000085683
		//outputResources = WasteWater, 0.0000046828, true, Waste, 0.0000257297, true
		@converterName = CO2 Scrubber
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.010
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0058912100
		}
		INPUT_RESOURCE
		{
			ResourceName = LithiumHydroxide
			Ratio = 0.0000085683
		}
		OUTPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = 0.0000046828
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.0000257297
			DumpExcess = true
		}
	}
	@RESOURCE[LithiumPeroxide]
	{
		@name = LithiumHydroxide
		@amount = 31.5
		@maxAmount = 31.5
	}
}
+PART[TacCarbonExtractor]:FOR[zzzRealismOverhaul]
{
	@name = RO_TACPotassiumSuperoxide
	@title = TACLS CO2 Scrubber (Potassium Superoxide)
	@description = A simple CO2 scrubber using potassium superoxide. Absorbs CO2, and releases water (which needs purification before use) and carbon (waste). Requires small electric charge to run air pump. Figure 0.75L of PotassiumSuperoxide/person/day. Rated for 3 people. Resources for 14days.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 3.0	// # of people - Figures based on per/person
		//inputResources = CarbonDioxide, 0.0058912100, ElectricCharge, 0.010, PotassiumSuperoxide, 0.0000086769
		//outputResources = Oxygen, 0.0043860452, true, Waste, 0.0000348617, true, WasteWater, 0.00000238761, true
		@converterName = CO2 Scrubber
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.010
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0058912100
		}
		INPUT_RESOURCE
		{
			ResourceName = PotassiumSuperoxide
			Ratio = 0.0000086769
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.0043860452
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.0000348617
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = 0.00000238761
			DumpExcess = true
		}
	}
	@RESOURCE[LithiumPeroxide]
	{
		@name = PotassiumSuperoxide
		@amount = 31.5
		@maxAmount = 31.5
	}
}
@PART[TacCarbonExtractorLarge]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 2.5
	}
	@mass = 0.150
	@title = TACLS Bosch Carbon Reactor
	@description = Using the Bosch reaction, a substantial amount of electricity is used to produce the heat needed to react CO2 and H2 to form carbon (waste) and water vapor. Rated for 3 people.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 3.0	// # of people - Figures based on per/person
		//inputResources = CarbonDioxide, 0.0058912100, ElectricCharge, 2.5, Hydrogen, 0.0117123855
		//outputResources = WasteWater, 0.00000955024, true, Waste, 0.0000053866718248, true
		@converterName = Bosch Reactor
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 2.5
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0058912100
		}
		INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.0117123855
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.0000053866718248
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = 0.00000955024
			DumpExcess = true
		}
	}
	!RESOURCE[CarbonDioxide]
	{
	}
}
@PART[TacSabatierRecycler]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 1.25
	}
	@mass = 0.065
	@description = Using the Sabatier reaction to reclaim water from carbon dioxide and hydrogen. Produces 1kg LqdMethane/day.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 1.0	// Amount LqdMethane/Day
		//inputResources = CarbonDioxide, 0.0172683775, ElectricCharge, 0.7, Hydrogen, 0.0647212460
		//outputResources = LqdMethane, 0.0000271941, true, Water, 0.0000259988, true
		@converterName = Sabatier Reactor
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.7
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0172683775
		}
		INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.0647212460
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 0.0000271941
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000259988
			DumpExcess = true
		}
	}
	!RESOURCE[CarbonDioxide]
	{
	}
}
@PART[TacSabatierRecyclerLarge]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 2.5
	}
	@mass = 0.160
	@title = TACLS Sabatier Reactor
	@description = A life support recycling module that uses the Sabatier reaction to reclaim water from carbon dioxide and hydrogen. Produces 2kg LqdMethane/day.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 2.0	// Amount LqdMethane/Day
		//inputResources = CarbonDioxide, 0.0172683775, ElectricCharge, 0.8, Hydrogen, 0.0647212460
		//outputResources = LqdMethane, 0.0000271941, true, Water, 0.0000259988, true
		@converterName = Sabatier Reactor
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.8
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.0172683775
		}
		INPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.0647212460
		}
		OUTPUT_RESOURCE
		{
			ResourceName = LqdMethane
			Ratio = 0.0000271941
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000259988
			DumpExcess = true
		}
	}
	!RESOURCE[CarbonDioxide]
	{
	}
}
@PART[TacWaterPurifier]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 1.25
	}
	@description = Get the most from your pee. Recycle. Rated for 1 person
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 1.0	// # of people - Figures based on per/person
		//inputResources = WasteWater, 0.00004059709561, ElectricCharge, 0.1
		//outputResources = Water, 0.0000383361, false, Waste, 0.00000365912, true
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.1
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = 0.00004059709561
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.00000365912
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000383361
			@DumpExcess = false
		}
	}
	!RESOURCE[WasteWater]
	{
	}
}
@PART[TacWaterPurifierLarge]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 2.5
	}
	@title = TACLS Water Purifier
	@description = Get the most from your pee. Recycle. Rated for 2 people.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 2.0	// # of people - Figures based on per/person
		//inputResources = WasteWater, 0.00004059709561, ElectricCharge, 0.3
		//outputResources = Water, 0.0000383361, false, Waste, 0.00000365912, true
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.3
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = 0.00004059709561
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = 0.00000365912
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000383361
			@DumpExcess = false
		}
	}
	!RESOURCE[WasteWater]
	{
	}
}
@PART[TacWaterSplitter]:NEEDS[TacLifeSupport]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	MODULE
	{
		name = TweakScale
		type = RealismOverhaulStackSolid
		defaultScale = 1.25
	}
	@description = Using electroysis, split water into hydrogen and oxygen. Rated for 2 people.
	@MODULE[TacGenericConverter]
	{
		!INPUT_RESOURCE,* {}
		!OUTPUT_RESOURCE,* {}
		conversionRate = 2.0	// # of people - Figures based on per/person
		//inputResources = Water, 0.0000053129, ElectricCharge, 0.5
		//outputResources = Hydrogen, 0.0066129570, true, Oxygen, 0.003116887, false
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.5
		}
		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000053129
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Hydrogen
			Ratio = 0.0066129570
			DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.003116887
			@DumpExcess = false
		}
	}
}
+PART[FuelCell]:NEEDS[TacLifeSupport]:FOR[zzzRealismOverhaul]
{
  %RSSROConfig = True
	@name = RO_TACLO2ToO2
	@title = TACLS Liquid O2 to O2 converter
	@description = A simple device to evaporate LO2 to use for astronaut breathing oxygen.

	@mass = 0.050

	!RESOURCE[LithiumPeroxide] {}

	!MODULE[TacGenericConverter] {}
	!MODULE[ModuleResourceConverter] {}

	MODULE
	{
		name = TacGenericConverter
		%converterName = LOX-O2
		%StartActionName = Start Oxygen Generator
		%StopActionName = Stop Oxygen Generator
		%conversionRate = 1.0
		INPUT_RESOURCE
		{
			%ResourceName = LqdOxygen
			%Ratio = 0.0000085058788
		}
		INPUT_RESOURCE
		{
			%ResourceName = ElectricCharge
			%Ratio = 0.025
		}
		OUTPUT_RESOURCE
		{
			%ResourceName = Oxygen
			%Ratio = 0.006883126
			%DumpExcess = false
		}
	}
}
