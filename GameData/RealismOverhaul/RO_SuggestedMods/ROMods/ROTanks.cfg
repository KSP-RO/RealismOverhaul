@PART[ROT-ModularCargoBay]:FOR[RealismOverhaul] { %RSSROConfig = true }
@PART[ROT-Mount]:FOR[RealismOverhaul] { %RSSROConfig = true }

@PART[ROT-AtlasDecoupler|ROT-OpenInterstage|ROT-RingDecoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = true
	@MODULE[ModuleROTank]
	{
		%usePFStyleMass = true
		// from PF massing
		%specificMass = 0.0002, 0.0075, 0.005, 0
		%decouplerMassMult = 4
	}
}

@PART[ROT-AtlasDecoupler]:FOR[RealismOverhaul]
{
	// PF massing is ~900kg too light for the skirt.
	// Increase the diam^2 coefficient to account for this.
	// Also, use lower decoupler mass mult and push that
	// into the coefficients. 0.0075->0.0375->0.075
	@MODULE[ModuleROTank]
	{
		%specificMass = 0.0004, 0.075, 0.01, 0
		%decouplerMassMult = 2
	}
}

@PART[ROT-ProbeCore|ROT-reDIRECTAvionics]:FOR[RealismOverhaul]
{
	%RSSROConfig = true
	%roTankType = battery
}
@PART[ROT-ProbeCore|ROT-reDIRECTAvionics]:AFTER[RealismOverhaulTankTypes]
{
	@MODULE[ModuleFuelTanks]
	{
		%TANK[ElectricCharge]
		{
			%amount = Full
			%maxAmount = 100%
		}
	}
}

// Hard-deprecate the ROTanks parts that used the RF legacy tank types,
// and create copies for each appropriate current type.
// To add support for a new ROT-blah tank part, just add it to one of the
// wantROTankTypes = xxx blocks below
//		RO_RealFuels_PartConfigs applies tank types in FOR[RealismOverhaulTankTypes]

// part 1: specify which tank type to give to which part
@PART[ROT-GenericTank]:BEFORE[RealismOverhaul]
{
	wantROTankTypes = fuel sm balloon
}
@PART[ROT-AtlasTank,ROT-reDIRECTTank,ROT-KatnissTank,ROT-CMES-Tank]:BEFORE[RealismOverhaul]
{
	wantROTankTypes = fuel balloon
}
@PART[ROT-Nose,ROT-LanderTank]:BEFORE[RealismOverhaul]
{
	wantROTankTypes = fuel sm
}
@PART[ROT-BoosterTank,ROT-RadialTank,ROT-SphericalTank,ROT-ToroidalTank]:BEFORE[RealismOverhaul]
{
	wantROTankTypes = fuel
}

// some parts predating this system got a non-conventional name :(
@PART[ROT-GenericTank]:BEFORE[RealismOverhaul]
{
	balloonName = ROT-BalloonTank-New
	smName = ROT-ServiceModule
}
@PART[ROT-LanderTank]:BEFORE[RealismOverhaul]
{
	smName = ROT-LanderTank-SM
}
@PART:HAS[#wantROTankTypes,~smName]:BEFORE[RealismOverhaul]
{
	smName = #$name$-ServiceModule
}
@PART:HAS[#wantROTankTypes,~balloonName]:BEFORE[RealismOverhaul]
{
	balloonName = #$name$-Balloon
}

// part 2: create the new parts
+PART[ROT-*]:HAS[#wantROTankTypes[*balloon*],~roTankType]:BEFORE[RealismOverhaul]
{
	@name = #$balloonName$
	@title ^= :$: (Balloon)
	%roTankType = balloon
}
+PART[ROT-*]:HAS[#wantROTankTypes[*fuel*],~roTankType]:BEFORE[RealismOverhaul]
{
	@name ^= :$:-Integral:
	@title ^= :$: (Isogrid Structure)
	%roTankType = integral
}
+PART[ROT-*]:HAS[#wantROTankTypes[*fuel*],~roTankType]:BEFORE[RealismOverhaul]
{
	@name ^= :$:-Separate:
	@title ^= :$: (Conventional Structure)
	%roTankType = conventional
}
+PART[ROT-*]:HAS[#wantROTankTypes[*sm*],~roTankType]:BEFORE[RealismOverhaul]
{
	@name = #$smName$
	@title ^= :$: (Service Module):
	%roTankType = service
}

+PART[ROT-*]:HAS[#wantROTankTypes[*shielded*],~roTankType]:BEFORE[RealismOverhaul]
{
	@name ^= :$:-Shielded:
	@title ^= :$: (Shielded):
	%roTankType = spaceplane
}

//Patch max temps for tanks
@PART[ROT-*]:FOR[RealismOverhaul]
{
        %skinMaxTemp = 873.15
        %maxTemp = 773.15
}
//Patch shielded tank temps to be higher
@PART[ROT-*-Shielded]:HAS[#roTankType[spaceplane]]:FOR[RealismOverhaul]
{
        %skinMaxTemp = 2473.15
        %maxTemp = 1473.15
}

// part 3: common bits and cleanup
@PART[ROT-*]:HAS[#wantROTankTypes,#roTankType]:BEFORE[RealismOverhaul]
{
	%RSSROConfig = true
	!wantROTankTypes = delete
	!balloonName = delete
	!smName = delete
}
!PART[ROT-*]:HAS[#wantROTankTypes,~roTankType]:BEFORE[RealismOverhaul] {}


// Should no longer apply, parts should be hard-deprecated (deleted) now
// This will kick in for any new tank part that's not yet supported.
//  (TODO: give more useful title & description)
@PART[ROT-*Tank]:FOR[RealismOverhaul]
{
	@description = Don't use this tank.
	%RSSROConfig = true
	%RODeprecated = true
}

