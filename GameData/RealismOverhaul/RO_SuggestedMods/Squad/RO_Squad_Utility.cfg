@PART[commDish]:FOR[RealismOverhaul] //Comm-88, folding dish 
{
	%RSSROConfig = True
	@mass = 0.015
	@description = Improved circuitry allows this small folding dish to be suitable for deep-space missions.
}
@PART[commDish]:AFTER[RemoteTech]
{
	@MODULE[ModuleRTAntenna]
	{
		@Mode0DishRange = 0
		@Mode1DishRange = 40000000000000 //40Tm
		@EnergyCost = 0.25
		@MaxQ = 6000
		@DishAngle = 0.4
		@TRANSMITTER
		{
			@PacketInterval = 1.5
			@PacketSize = 0.84
			@PacketResourceCost = 1.75
		}
	}
}
@PART[mediumDishAntenna]:FOR[RealismOverhaul]  //DTS-M1, radial, high-end inner planets
{
	%RSSROConfig = True
	@mass = 0.008
}
@PART[mediumDishAntenna]:AFTER[RemoteTech] 
{
	@MODULE[ModuleRTAntenna]
	{
		@Mode0DishRange = 0
		@Mode1DishRange = 250000000000 //250Gm
		@EnergyCost = 0.12
		@MaxQ = 6000
		@DishAngle = 12
		@TRANSMITTER
		{
			@PacketInterval = 0.3
			@PacketSize = 0.56
			@PacketResourceCost = 0.15
		}
	}
	%description = The DTS-M1 is a fully deployable communications and data transmission system. It has been designed to have a minimal form factor when stowed, at the price of a lower data rate and higher power requirements.
}
@PART[longAntenna]:FOR[RealismOverhaul] //Comm-16
{
	%RSSROConfig = True
	@mass = 0.003
}
@PART[longAntenna]:AFTER[RemoteTech]
{
	@MODULE[ModuleRTAntenna]
	{
		@Mode0OmniRange = 0
		@Mode1OmniRange = 4000000
		@EnergyCost = 0.0015
		@TRANSMITTER
		{
			@PacketInterval = 0.4
			@PacketSize = 0.29
			@PacketResourceCost = 0.0075
		}
	}
	%description = A powerful omni antenna, adequate for early lunar probes. If you wonder how a 4Mm antenna can reach the Moon, check the Realism Overhaul FAQ.
}
@PART[radialDecoupler1-2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.15
}
@PART[radialDecoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.10
}
@PART[radialDecoupler2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.15
}
@PART[stackSeparatorMini]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackSeparator]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.08
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackSeparatorBig]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.320
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[decoupler1-2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.350
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackDecouplerMini]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.020
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackDecoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.080
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}@PART[fuelLine]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[ladder1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[telescopicLadder]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.020
}
@PART[telescopicLadderBay]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.035
}
@PART[landingLeg1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.075
}
@PART[landingLeg1-2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.125
}
@PART[miniLandingLeg]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.030
}
@PART[largeAdapter]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@module = Part
	@mass = 0.215
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow_Adapter_Halved
	}
}
@PART[largeAdapter2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@module = Part
	@mass = 0.05
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow_Adapter_Halved
	}
}
@PART[launchClamp1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[linearRcs]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
    @PhysicsSignificance = 0
	!MODULE[TweakScale]
	{
	}
	!mesh = DEL
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/linearRCS/model
		scale = 2.0, 2.0, 2.0
	}
	@mass = 0.012
	%useRcsConfig = RCSBlockDouble
	%useRcsMass = True
	%useRcsCostMult = 0.25
	@title = RCS Thruster (550/890N class)
	@manufacturer = Generic
	@description = A generic single RCS thruster. Use this for attitude control or translation/ullage for large stages.
	@MODULE[ModuleRCS]
	{
		@name = ModuleRCSFX
		@thrusterPower = 0.55
		!resourceName = DELETE
		PROPELLANT
		{
			ratio = 1.0
			name = Hydrazine
		}
		@atmosphereCurve
		{
			@key,0 = 0 254
			@key,1 = 1 82.08
		}
	}
}
+PART[linearRcs]:AFTER[RealismOverhaul]
{
	@name = RO_FASA_MercuryPodRCS
	!mesh = DEL
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/linearRCS/model
		scale = 1.0, 1.0, 1.0
	}
	%rescaleFactor = 1.0
	@title = Attitude Jet (138/223N class)
	@manufacturer = Generic
	@description = These small thrusters are for upper stage or medium probe orientation.
	@mass = 0.003
	@maxTemp = 1200
	%useRcsConfig = RCSBlockHalf
	%useRcsMass = True
	%useRcsCostMult = 0.25
	@MODULE[ModuleRCSFX]
	{
		@resourceFlowMode = STACK_PRIORITY_SEARCH
		@thrusterPower = 0.138
	}
	!MODULE[ModuleEngineConfigs]
	{
	}
}
@PART[RO_FASA_MercuryPodRCS]:AFTER[RO-RCS]
{
	@MODULE[ModuleEngineConfigs]
	{
		@configuration = Nitrogen
	}
}
+PART[linearRcs]:AFTER[RealismOverhaul]
{
	@name = RO_FASA_ExplorerRCS
	!mesh = DEL
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/linearRCS/model
		scale = 0.7, 0.7, 0.7
	}
	%rescaleFactor = 1.0
	@title = Attitude Jet (69/111N class)
	@manufacturer = Generic
	@description = These small thrusters are for upper stage or small probe orientation.
	@mass = 0.0015
	%useRcsConfig = RCSBlockQuarter
	%useRcsMass = True
	%useRcsCostMult = 0.25
	@MODULE[ModuleRCSFX]
	{
		@resourceFlowMode = STACK_PRIORITY_SEARCH
		@thrusterPower = 0.069
	}
}
@PART[RO_FASA_ExplorerRCS]:AFTER[RO-RCS]
{
	@MODULE[ModuleEngineConfigs]
	{
		@configuration = Nitrogen
	}
}
@PART[parachuteSingle]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	!mesh = model.mu
	MODEL
	{
		model = Squad/Parts/Utility/parachuteMk1/model
		scale = 1.6, 1.6, 1.6
	}
	%rescaleFactor = 1.0
	@scale = 1.0
	@node_stack_bottom = 0.0, -0.120649, 0.0, 0.0, -1.0, 0.0, 0
	@mass = 0.0305
	@MODULE[RealChuteModule]
	{
		@caseMass = 0.002
	}
}
@PART[parachuteRadial]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	!mesh = model.mu
	MODEL
	{
		model = Squad/Parts/Utility/parachuteMk2-R/model
		scale = 1.0, 1.0, 1.0
	}
	%rescaleFactor = 1.0
	@scale = 1.0
	@mass = 0.0232
	@MODULE[RealChuteModule]
	{
		@caseMass = 0.01
	}
}
@PART[radialDrogue]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.007
	@MODULE[RealChuteModule]
	{
		@caseMass = 0.003
	}
}
@PART[parachuteLarge]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	!mesh = model.mu
	MODEL
	{
		model = Squad/Parts/Utility/parachuteMk16-XL/model
		scale = 1.6, 1.6, 1.6
	}
	%rescaleFactor = 1.0
	@scale = 1.0
	@node_stack_bottom = 0.0, -0.0330384, 0.0, 0.0, -1.0, 0.0, 2
	@mass = 0.1589
	@MODULE[RealChuteModule]
	{
		@caseMass = 0.045
	}
}
@PART[parachuteDrogue]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	!mesh = model.mu
	MODEL
	{
		model = Squad/Parts/Utility/parachuteMk25/model
		scale = 1.6, 1.6, 1.6
	}
	%rescaleFactor = 1.0
	@scale = 1.0
	@node_stack_bottom = 0.0, -0.0330384, 0.0, 0.0, -1.0, 0.0, 2
	@mass = 0.0507
	@MODULE[RealChuteModule]
	{
		@caseMass = 0.045
	}
}
@PART[stackPoint1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.025
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[RCSBlock]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
    @PhysicsSignificance = 0
	!MODULE[TweakScale]
	{
	}
	!mesh = DEL
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/rcsBlockRV-105/model
		scale = 1.4, 1.4, 1.4
	}
	@mass = 0.028
	%useRcsConfig = RCSBlock
	%useRcsMass = True
	@title = RCS Quad (275/445N class)
	@manufacturer = Generic
	@description = A generic RCS quad. Use this for attitude control or translation/ullage for medium stages and spacecraft (when using NTO/MMH, same performance as the Apollo SM quads).
	@MODULE[ModuleRCS]
	{
		@name = ModuleRCSFX
		@thrusterPower = 0.275
		!resourceName = DELETE
		PROPELLANT
		{
			ratio = 1.0
			name = Hydrazine
		}
		@atmosphereCurve
		{
			@key,0 = 0 254
			@key,1 = 1 82.08
		}
	}
}
+PART[RCSBlock]:AFTER[RealismOverhaul]
{
	@name = SquadRCSBlockHalf
	!mesh = DELETE
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/rcsBlockRV-105/model
		scale = 1.0, 1.0, 1.0
	}
	@scale = 0.625
	%rescaleFactor = 1.0
	@node_attach = 0.045212, -0.00105571, -0.00059382, 1.0, 0.0, 0.0
	@TechRequired = stability
	@entryCost = 1450
	@title = RCS Quad (138/223N class)
	@manufacturer = Generic
	@description = A generic RCS quad. Use this for attitude control or translation/ullage for small stages and spacecraft.
	@mass = 0.014
	%useRcsConfig = RCSBlockHalf
	%useRcsMass = True
	@MODULE[ModuleRCSFX]
	{
		@thrusterPower = 0.1375
	}
}
+PART[RCSBlock]:AFTER[RealismOverhaul]
{
	@name = RCSBlockQuarter
	!mesh = DELETE
	!MODEL {}
	MODEL
	{
		model = Squad/Parts/Utility/rcsBlockRV-105/model
		scale = 0.7, 0.7, 0.7
	}
	@scale = 0.3125
	%rescaleFactor = 1.0
	@node_attach = 0.045212, -0.00105571, -0.00059382, 1.0, 0.0, 0.0
	@TechRequired = stability
	@entryCost = 3400
	@title = RCS Quad (69/111N class)
	@manufacturer = Generic
	@description = A generic RCS quad. Use this for attitude control or translation/ullage for rather small spacecraft or kick stages.
	@mass = 0.007
	%useRcsConfig = RCSBlockQuarter
	%useRcsMass = True
	@MODULE[ModuleRCSFX]
	{
		@thrusterPower = 0.06875
	}
}
@PART[roverBody]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.050
	@RESOURCE[ElectricCharge]
	{
		@amount = 43200
		@maxAmount = 43200
	}
}
@PART[sensorAccelerometer]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[sensorBarometer]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[sensorGravimeter]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[sensorThermometer]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
}
@PART[spotLight1]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.0035
	@MODULE[ModuleLight]
	{
		@resourceAmount = 0.03
	}
}
@PART[spotLight2]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.0035
	@MODULE[ModuleLight]
	{
		@resourceAmount = 0.015
	}
}
@PART[stackBiCoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.080
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackQuadCoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.150
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[stackTriCoupler]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@mass = 0.125
	@MODULE[TweakScale]
	{
		@type = RealismOverhaulStackHollow
	}
}
@PART[FuelCell]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	!MODULE[ModuleResourceConverter]
	{
	}

	MODULE
	{
		name = TacGenericConverter
		converterName = Fuel Cell
		conversionRate = 1.0
		inputResources = LqdHydrogen, 0.0001523573, LqdOxygen, 0.0000752767
		outputResources = Water, 0.0001041667, true, ElectricCharge, 0.98, true
	}
}

@PART[FuelCellArray]:FOR[RealismOverhaul]
{
	%RSSROConfig = True

	!MODULE[ModuleResourceConverter]
	{
	}

	MODULE
	{
		name = TacGenericConverter
		converterName = Fuel Cell
		conversionRate = 3.0
		inputResources = LqdHydrogen, 0.0001523573, LqdOxygen, 0.0000752767
		outputResources = Water, 0.0001041667, true, ElectricCharge, 0.98, true
	}
}

// Service bays
@PART[ServiceBay_125]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODEL
	{
		%scale = 1.6, 1.6, 1.6
	}
	%scale = 1.0
	@node_stack_top2 = 0.0, 0.4, 0.0, 0.0, -1.0, 0.0, 1
	@node_stack_bottom2 = 0.0, -0.4, 0.0, 0, -1, 0, 1
	@node_stack_top = 0.0, 0.48, 0.0, 0.0, 1.0, 0.0, 1
	@node_stack_bottom = 0.0, -0.48, 0.0, 0.0, -1.0, 0.0, 1
	
	@maxTemp = 1000
	@title = Service Bay [2m]
	@description = Service bay for protecting small delicate instruments during spaceflight. Note: must be shielded for reentry, bay itself is delicate too.
	
	@mass = 0.05
	%emissiveConstant = 0.2
	!MODULE[ModuleConductionMultiplier] {}
}
@PART[ServiceBay_250]:FOR[RealismOverhaul]
{
	%RSSROConfig = True
	@MODEL
	{
		%scale = 1.6, 1.6, 1.6
	}
	%scale = 1.0
	@node_stack_top2 = 0.0, 0.88, 0.0, 0.0, -1.0, 0.0, 1
	@node_stack_bottom2 = 0.0, -0.88, 0.0, 0, -1, 0, 1
	
	@node_stack_top = 0.0, 1.04, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_bottom = 0.0, -1.04, 0.0, 0.0, -1.0, 0.0, 2
	
	@maxTemp = 1000
	@title = Service Bay [4m]
	@description = Service bay for protecting small delicate instruments during spaceflight. Note: must be shielded for reentry, bay itself is delicate too.
	
	@mass = 0.24
	%emissiveConstant = 0.2
	!MODULE[ModuleConductionMultiplier] {}
}
