// Fix RCS thruster FX
@PART[*]:HAS[@MODULE[ModuleRCS*]]:FINAL
{
	MODULE
	{
		name = RCSFXFixer
	}
}

// Set up solar panel displays.
@PART[*]:HAS[@MODULE[ModuleDeployableSolarPanel]]:FOR[ROSolar]
{
	@MODULE[ModuleDeployableSolarPanel],*:HAS[!RESOURCE[*]]
	{
		RESOURCE
		{
			name = ElectricCharge
			rate = #$../chargeRate$
		}
	}
	@MODULE[ModuleDeployableSolarPanel],*
	{
		%flowUnits = Watts
		%flowFormat = F1
		%flowMult = 1000
		@RESOURCE[ElectricCharge]
		{
			%varyTime = False
			%useSI = True
			%displayUnitMult = 1000
			%unitName = Watts
		}
	}
}

// Set a pre-RO max temp.
@PART[*]:HAS[!MODULE[ModuleEngines*],!MODULE[ModuleHeatShield],~RSSROConfig[]]:BEFORE[RealismOverhaul]
{
	%maxTemp = 1073.15
}

@PART[*]:HAS[@MODULE[ModuleEngines],#RSSROConfig[*]]:FINAL
{
	@MODULE[ModuleEngines],*
	{
		@name = ModuleEnginesRF
	}
}
@PART[*]:HAS[@MODULE[ModuleEnginesFX],#RSSROConfig[*]]:FINAL
{
	@MODULE[ModuleEnginesFX],*
	{
		@name = ModuleEnginesRF
	}
}

// Set a pre-RO impact tolerance and breaking force
@PART[*]:HAS[crashTolerance[>12]]:BEFORE[RealismOverhaul]
{
	%crashTolerance = 12
}
@PART[*]:HAS[~breakingForce[]]:BEFORE[RealismOverhaul]
{
	%breakingForce = 250
	%breakingTorque = 250
}

// force all parts to full physics (FIXME: no longer needed in 1.0.x ?
@PART[*]:HAS[#PhysicsSignificance[>0]]:FINAL
{
	@PhysicsSignificance = 0
}

// Set engines to activatable when shielded
@PART[*]:HAS[@MODULE[ModuleEngines*]]:FINAL
{
	@MODULE[ModuleEngines*],*
	{
		%shieldedCanActivate = True
		%exhaustDamageMultiplier = 20
		%exhaustDamageFalloffPower = 1
		%exhaustDamageMaxMutliplier = 1.0
		%exhaustDamageSplashbackMult = 0.1
		%exhaustDamageSplashbackMaxMutliplier = 0.1
	}
}

// Add MJ, KER, kOS to all command parts
@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[MechJebCore]]:NEEDS[MechJeb2]:FOR[RealismOverhaul]
{
    MODULE
    {
        name = MechJebCore

        MechJebLocalSettings {
            MechJebModuleCustomWindowEditor { unlockTechs = start }
            MechJebModuleSmartASS { unlockTechs = start }
            MechJebModuleManeuverPlanner { unlockTechs = start }
            MechJebModuleNodeEditor { unlockTechs = start }
            MechJebModuleTranslatron { unlockTechs = start }
            MechJebModuleWarpHelper { unlockTechs = start }
            MechJebModuleAttitudeAdjustment { unlockTechs = start }
            MechJebModuleThrustWindow { unlockTechs = start }
            MechJebModuleRCSBalancerWindow { unlockTechs = start }
            MechJebModuleRoverWindow { unlockTechs = start }
            MechJebModuleAscentGuidance { unlockTechs = start }
            MechJebModuleLandingGuidance { unlockTechs = start }
            MechJebModuleSpaceplaneGuidance { unlockTechs = start }
            MechJebModuleDockingGuidance { unlockTechs = start }
            MechJebModuleRendezvousAutopilotWindow { unlockTechs = start }
            MechJebModuleRendezvousGuidance { unlockTechs = start }
        }
    }
}

@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[FlightEngineerModule]]:NEEDS[KerbalEngineer]:FOR[RealismOverhaul]
{
    MODULE
	{
		name = FlightEngineerModule
	}
}

@PART[*]:HAS[@MODULE[ModuleCommand],!MODULE[kOSProcessor]]:NEEDS[kOS]:FINAL
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 5000
	}
}

@PART[*]:HAS[@MODULE[ModuleRTAntennaPassive]|@MODULE[ModuleRTAntenna]|@MODULE[ModuleDataTransmitter],!MODULE[TelemachusDataLink]]:NEEDS[Telemachus]:FINAL
{
	MODULE
	{
		name = TelemachusDataLink
	}

	MODULE
	{
		name = TelemachusPowerDrain
		powerConsumptionBase = 0.00
		powerConsumptionIncrease = 0.001
	}
}

@PART[*]:HAS[@MODULE[ModuleAnchoredDecoupler]|@MODULE[ModuleDecouple],!MODULE[ModuleToggleCrossfeed]]:BEFORE[RealismOverhaul]
{
    MODULE
    {
        name = ModuleToggleCrossfeed
        crossfeedStatus = false
        toggleEditor = true
        toggleFlight = true
    }
}

// RSSROConfig stuff
@PART[*]:HAS[~RSSROConfig[]]:FINAL
{
    %category:NEEDS[FilterExtensions] = 9
	@title ^=:^:non RO - :
	@description ^=:$: (PART NOT SUPPORTED BY RO):
}

@PART[*]:HAS[#RSSROConfig[False]]:FINAL
{
    %category:NEEDS[FilterExtensions] = 8
	@title ^=:^:WIP RO - :
	@description ^=:$: (PART IN PROGRESS, MAY NOT WORK):
}

// ******** DRE ********
// DRE don't change temps
@PART[*]:HAS[#RSSROConfig[*],!MODULE[ModuleAeroReentry],!MODULE[ModuleHeatShield]]:NEEDS[DeadlyReentry]:FINAL
{
	MODULE
	{
		name = ModuleAeroReentry
		skinHeatConductivity = 0.001
		leaveTemp = True
	}
}

@PART[*]:HAS[#RSSROConfig[*]]:FINAL
{
	@MODULE[ModuleAeroReentry]
	{
		%leaveTemp = True
	}
	@MODULE[ModuleHeatShield]
	{
		%leaveTemp = True
	}
}

// Fix a DRE case where it changes away from Ablator but we expect Ablator.
@PART[*]:HAS[!MODULE[ModuleAblator],@MODULE[ModuleHeatShield]]:BEFORE[RealismOverhaul]
{
	@MODULE[ModuleHeatShield]
	{
		@name = ModuleAblator
	}
}
@PART[*]:HAS[@MODULE[ModuleAblator],!MODULE[ModuleHeatShield]]:AFTER[RealismOverhaul]:NEEDS[DeadlyReentry]
{
	@MODULE[ModuleAblator]
	{
		@name = ModuleHeatShield
		%depletedMaxTemp = 1200
	}
}
