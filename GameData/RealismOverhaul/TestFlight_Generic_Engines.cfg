// Handle TF interop
@PART[*]:HAS[@TESTFLIGHT[*],@MODULE[TestFlightInterop]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	!TESTFLIGHT,* {} // something else is configuring TF, so don't do it.
}

@PART[*]:HAS[@TESTFLIGHT[*],!MODULE[TestFlightInterop]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightInterop
	}
}

// Preprocess
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	@TESTFLIGHT,*:HAS[~name[]]
	{
		name = TFGenericMissingName
	}
	
	@TESTFLIGHT,*
	{
		temp = engineConfig =
		mainConf = #$temp$ $name$:$name$
		
		kinkV = 0.75
		kinkH = 0.4
		kinkW = 0.5
		
		numThings = 1.0
		
		dataMult = 1.0
		rmtName = TestFlightFailure_ReducedMaxThrust
		eplName = TestFlightFailure_EnginePerformanceLoss
		shutdownName = TestFlightFailure_ShutdownEngine
		qMult = 1.0
		tech =  
		additionalIgnitionFailChance = 0.2
	}
	@TESTFLIGHT,*:HAS[#mainConfiguration[*]]
	{
		@mainConf = #$mainConfiguration$
	}
	@TESTFLIGHT,*:HAS[#reliabilityMidV[*]]
	{
		@kinkV = #$reliabilityMidV$
	}
	@TESTFLIGHT,*:HAS[#reliabilityMidTangentWeight[*]]
	{
		@kinkW = #$reliabilityMidTangentWeight$
	}
	@TESTFLIGHT,*:HAS[#reliabilityMidH[*]]
	{
		@kinkH = #$reliabilityMidH$
	}
	@TESTFLIGHT,*:HAS[#reliabilityDataRateMultiplier[*]]
	{
		@dataMult = #$reliabilityDataRateMultiplier$
	}
	@TESTFLIGHT,*:HAS[#ignitionDynPresFailMultiplier[*]]
	{
		@qMult = #$ignitionDynPresFailMultiplier$
	}
	@TESTFLIGHT,*:HAS[#techTransfer[*]]
	{
		@tech = #$techTransfer$
	}
	@TESTFLIGHT,*:HAS[#isSolid[?rue]]
	{
		@rmtName = DISABLED_TestFlightFailure_ReducedMaxThrust
		@shutdownName = DISABLED_TestFlightFailure_ShutdownEngine
		// ordinarily we'd put EPL here too, but that applies to solids.
	}
	@TESTFLIGHT,*:HAS[#clusterMultiplier[*]]
	{
		@numThings = #$clusterMultiplier$
	}
	@TESTFLIGHT,*:HAS[~explicitDataRate[?rue]]
	{
		@dataMult *= 640 // normalized to rate=4 at 160s burntime
		@dataMult /= #$ratedBurnTime$
	}
	@TESTFLIGHT,*:HAS[#additionalIgnitionFailureChance[*]]
	{
		@additionalIgnitionFailChance = #$additionalIgnitionFailureChance$
	}
	@TESTFLIGHT,*
	{
		@ignitionReliabilityStart *= -1
		@ignitionReliabilityStart += 1
		@ignitionReliabilityStart *= #$numThings$
		@ignitionReliabilityStart -= 1
		@ignitionReliabilityStart *= -1
		
		@ignitionReliabilityEnd *= -1
		@ignitionReliabilityEnd += 1
		@ignitionReliabilityEnd *= #$numThings$
		@ignitionReliabilityEnd -= 1
		@ignitionReliabilityEnd *= -1
		
		@cycleReliabilityStart *= -1
		@cycleReliabilityStart += 1
		@cycleReliabilityStart *= #$numThings$
		@cycleReliabilityStart -= 1
		@cycleReliabilityStart *= -1
		
		@cycleReliabilityEnd *= -1
		@cycleReliabilityEnd += 1
		@cycleReliabilityEnd *= #$numThings$
		@cycleReliabilityEnd -= 1
		@cycleReliabilityEnd *= -1
		
		@dataMult *= #$numThings$
		
		
		failChanceStart = #$cycleReliabilityStart$
		@failChanceStart *= -1
		@failChanceStart += 1
		@failChanceStart /= #$ratedBurnTime$
		failChanceEnd = #$cycleReliabilityEnd$
		@failChanceEnd *= -1
		@failChanceEnd += 1
		@failChanceEnd /= #$ratedBurnTime$
	}
}

// Create the nodes.
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 8
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
@PART[*]:HAS[@TESTFLIGHT[*]]:FOR[zTestFlight]:NEEDS[!TestLite,TestFlight]
{
	MODULE
	{
		name = TestFlightCore
		title = #$../TESTFLIGHT,0/name$
		configuration = #$../TESTFLIGHT,0/mainConf$
		!temp = DEL
		maxData = 10000
		
		techTransferMax = 2000
		techTransfer = #$../TESTFLIGHT,0/tech$
	}
	MODULE
	{
		name = FlightDataRecorder_Engine
		configuration = #$../TESTFLIGHT,0/name$
		flightDataEngineerModifier = 0.4
		flightDataMultiplier = 1.0
		@flightDataMultiplier *= #$../TESTFLIGHT,0/dataMult$
	}
	MODULE
	{
		name = TestFlightReliability
		configuration = #$../TESTFLIGHT,0/name$
		reliabilityCurve
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key21 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/failChanceStart$
			
			// Calculate kink tangent
			key22 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key22 -= #$../../TESTFLIGHT,0/failChanceStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/failChanceEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/failChanceEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
			!key221 = DEL
			!key222 = DEL
		}
	}
	MODULE
	{
		name = TestFlightReliability_EngineCycle
		configuration = #$../TESTFLIGHT,0/name$
		ratedBurnTime = #$../TESTFLIGHT,0/ratedBurnTime$
		engineConfig = #$../TESTFLIGHT,0/name$
		cycle
		{
			key = 0.00 10.00
			key = 5.00 1.00 -0.8 0
			btPlus = #$../../TESTFLIGHT,0/ratedBurnTime$
			@btPlus += 5 // cushion
			bt25 = #$../../TESTFLIGHT,0/ratedBurnTime$
			@bt25 *= 2.5
			@bt25 += 5
			timeDelta = #$bt25$
			@timeDelta -= #$btPlus$
			slope = 292.8
			@slope /= #$timeDelta$
			key = #$btPlus$ 1 0 0
			key = #$bt25$ 100 $slope$ 0
			!btPlus = DEL
			!bt25 = DEL
			!timeDelta = DEL
			!slope = DEL
		}
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/shutdownName$ // TestFlightFailure_ShutdownEngine
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = True
			dataSize = 1
			dataScale = 1
			repairChance = 75
			canBeRepairedOnSplashed = True
			canBeRepairedByRemote = True
		}
		duFail = 1100
		weight = 32
		failureType = software
		failureTitle = Engine Shutdown
		duRepair = 50
		severity = major
	}
	MODULE
	{
		name = TestFlightFailure_IgnitionFail
		configuration = #$../TESTFLIGHT,0/name$
		
		restoreIgnitionCharge = False
		duFail = 1050
		oneShot = True
		failureType = mechanical
		failureTitle = Failed to ignite
		additionalFailureChance = #$../TESTFLIGHT,0/additionalIgnitionFailChance$
		pressureCurve
		{
			key = 0 1 0 0
			key = 5000 1 0 0
			key = 15000 0.85 -2.25E-05 -2.25E-05
			key = 30000 0.4
			key = 50000 0.15 0 0
			@key,*[0, ] *= #$../../TESTFLIGHT,0/qMult$
		}
		baseIgnitionChance
		{
			// Create first key
			key10 = 0
			key11 = #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink time
			key20 = #$../../TESTFLIGHT,0/kinkH$
			@key20 *= 5000
			@key20 += 1000
			
			// Calculate kink value
			key21 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key21 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key21 *= #$../../TESTFLIGHT,0/kinkV$
			@key21 += #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			
			// Calculate kink tangent
			// tangent = Y/X
			key22 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key22 -= #$../../TESTFLIGHT,0/ignitionReliabilityStart$
			@key22 *= 0.0001
			@key22 *= #$../../TESTFLIGHT,0/kinkW$
			// now average it with the linear tangent to the endpoint
			key221 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			@key221 -= #$key21$
			key222 = 10000
			@key222 -= #$key20$
			@key221 /= #$key222$
			@key222 = #$../../TESTFLIGHT,0/kinkW$
			@key222 *= -1
			@key222 += 1
			@key221 *= #$key222$
			@key22 += #$key221$
			
			
			// Create end key
			key30 = 10000
			key31 = #$../../TESTFLIGHT,0/ignitionReliabilityEnd$
			key32 = 0 // flat intangent
			
			// Create the keys
			key = #$key10$ $key11$
			key = #$key20$ $key21$ $key22$ $key22$
			key = #$key30$ $key31$ $key32$ $key32$
			
			// Clean up
			!key10 = DEL
			!key11 = DEL
			!key20 = DEL
			!key21 = DEL
			!key22 = DEL
			!key221 = DEL
			!key222 = DEL
			!key30 = DEL
			!key31 = DEL
			!key32 = DEL
		}
		ignorePressureOnPad = True // doesn't actually do anything...
		severity = major
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/rmtName$ // TestFlightFailure_ReducedMaxThrust
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 700
		weight = 16
		failureType = mechanical
		failureTitle = Loss of Thrust
		duRepair = 250
		severity = minor
	}
	MODULE
	{
		name = #$../TESTFLIGHT,0/eplName$ // TestFlightFailure_EnginePerformanceLoss
		oneShot = True
		configuration = #$../TESTFLIGHT,0/name$
		REPAIR
		{
			canBeRepairedInFlight = False
			canBeRepairedOnSplashed = False
			canBeRepairedByRemote = False
			repairChance = 75
		}
		duFail = 800
		weight = 16
		failureType = mechanical
		failureTitle = Performance Loss
		duRepair = 250
		severity = minor
		ispMultiplier = 0.5
		ispMultiplierJitter = 0.1
	}
	MODULE
	{
		name = TestFlightFailure_Explode
		configuration = #$../TESTFLIGHT,0/name$
		failureTitle = Explosion!
		duFail = 1300
		weight = 2
		failureType = mechanical
		severity = major
	}
	
	!TESTFLIGHT,0 {} // remove the node we processed
}
