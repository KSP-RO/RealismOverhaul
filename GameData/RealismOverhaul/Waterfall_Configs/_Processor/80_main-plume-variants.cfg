@PART[*]:HAS[@ROWaterfall:HAS[@MainPlumeVariant]]:BEFORE[zROWaterfall_80_MainPlumeVariants]:NEEDS[Waterfall,B9PartSwitch]
{
    MODULE
    {
        name = ModuleB9PartSwitch
        moduleID = rowaterfallMainPlumeSwitch
        switcherDescription = Waterfall Plume
        switcherDescriptionPlural = Plumes (auto-selected)
        advancedTweakablesOnly = true
        affectDragCubes = false
        affectFARVoxels = false
        switchInFlight = true

        SUBTYPE
        {
            name = #$/ROWaterfall/defaultMainPlumeVariantName$
        }
    }

    @MODULE[ModuleEngineConfigs] { %__is_mec = true }
    @MODULE[ModuleHybridEngine] { %__is_mec = true }
    @MODULE[ModulePairedConfigsEngine] { %__is_mec = true }
    @MODULE[ModuleAnimatedBimodalEngine] { %__is_mec = true }
    @MODULE:HAS[#__is_mec]
    {
        @CONFIG,* { &rowaterfallVariant = #$/ROWaterfall/defaultMainPlumeVariantName$ }
    }
}

@PART[*]:HAS[@ROWaterfall:HAS[@MainPlumeVariant]]:FOR[zROWaterfall_80_MainPlumeVariants]:NEEDS[Waterfall,B9PartSwitch]
{
    @MODULE[ModuleB9PartSwitch]:HAS[#moduleID[rowaterfallMainPlumeSwitch]]
    {
        SUBTYPE
        {
            name = #$/ROWaterfall/MainPlumeVariant/name$

            MODULE
            {
                IDENTIFIER
                {
                    name = ModuleWaterfallFX
                    moduleID = #$/ROWaterfall/moduleID$
                }

                // Specify the `TEMPLATE`s being replaced in this variant. It appears that *all*
                // `TEMPLATE` nodes need to be specified, even if only one is changed.
                //
                // Nasty trick: It's difficult to duplicate every template here, so we instead
                // paste the *entire Waterfall module* and take out everything we don't need.
                #/MODULE[ModuleWaterfallFX]:HAS[#__rowaterfall[main]] {}
                @MODULE[ModuleWaterfallFX]
                {
                    |_ = DATA
                    !__rowaterfall = delete
                    !name = delete
                    !moduleID = delete
                    !useRelativeScaling = delete

                    // Update contents of main template.
                    @TEMPLATE:HAS[#__rowaterfall[mainPlume]]
                    {
                        @overrideParentTransform = #$/ROWaterfall/MainPlumeVariant/transform$
                        @templateName = #$/ROWaterfall/MainPlumeVariant/template$
                        @position = #$/ROWaterfall/MainPlumeVariant/position$
                        @rotation = #$/ROWaterfall/MainPlumeVariant/rotation$
                        @scale = #$/ROWaterfall/MainPlumeVariant/scale$
                    }

                    // Update glow as necessary.
                    // For variants that request glow recomputation, the values will be different.
                    // Otherwise they are the same as the default variant.
                    // Processed in passes 38-40.
                    @TEMPLATE:HAS[#__rowaterfall[glow]]
                    {
                        @overrideParentTransform = #$/ROWaterfall/MainPlumeVariant/transform$
                        @templateName = #$/ROWaterfall/MainPlumeVariant/__glowTemplate$
                        @position = #$/ROWaterfall/MainPlumeVariant/__glowPosition$
                        @rotation = #$/ROWaterfall/MainPlumeVariant/rotation$
                        @scale = #$/ROWaterfall/MainPlumeVariant/__glowScale$
                    }
                }
            }
        }
    }

    @ROWaterfall
    {
        @MainPlumeVariant
        {
            |_ = MainPlumeVariant_Processed
            // Clean up.
            !__glowTemplate = delete
            !__glowPosition = delete
            !__glowScale = delete
        }
    }

    @MODULE:HAS[#__is_mec]
    {
        @CONFIG:HAS[#rowaterfallVariant]
        {
            %LinkB9PSModule[rowaterfallMainPlumeSwitch] { %subtype = #$../rowaterfallVariant$ }
        }
        // Clean up.
        @CONFIG,* { !rowaterfallVariant = delete }
        !__is_mec = delete
    }

    MM_PATCH_LOOP {}
}
